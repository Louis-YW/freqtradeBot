{
  "id": "topic_5410848",
  "title": "citb0in",
  "author": "citb0in",
  "created_time": "August 22, 2022, 07:40:32 PM",
  "content": "Hello everybody,I am looking for the tool coinkit or pybitcoin, I am not sure if they are the same. I am running python3 and are not able to run python2. If you know any GIT repository where I could get the latest available version or fork, please let me know.Thanks in advance",
  "score": 0,
  "upvotes": 0,
  "downvotes": 0,
  "url": "https://bitcointalk.org/index.php?topic=5410848",
  "comments": [
    {
      "author": "seoincorporation",
      "created_time": "August 22, 2022, 10:22:43 PM",
      "body": "Quote from: citb0in on August 22, 2022, 07:40:32 PMHello everybody,I am looking for the tool coinkit or pybitcoin, I am not sure if they are the same. I am running python3 and are not able to run python2. If you know any GIT repository where I could get the latest available version or fork, please let me know.Thanks in advanceDid you try to install them with pip?Code:pip install pybitcoinhttps://pypi.org/project/pybitcoin/Sorce code: https://github.com/stacks-network/pybitcoinI hope that information helps, i didn't know that tool exist, but after searching for some examples i see how nice is this tool. Maybe i will use it for some developments in the future. Thanks.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "citb0in",
      "created_time": "August 22, 2022, 10:45:30 PM",
      "body": "Thanks for your kind reply. Glad that you like it, too and found it interesting.I asked because of the GIT infoQuoteThis code is deprecated and should not be usedAs you see in his git repository the last commits were 6-7 years ago. I am not sure if there is a more recent fork of this tool suite. Anyone can shed some light onto, please?BTW: I got this error and didn't look further because I thought that it might be incompatible with the python3 installation on my up-to-date Ubuntu machine. Any clues how to fix that?Code:$ pybtctoolQuote  File \"/usr/local/bin/pybtctool\", line 6    print \"pybtctool <command> <arg1> <arg2> ...\"    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "seoincorporation",
      "created_time": "August 22, 2022, 11:46:46 PM",
      "body": "Quote from: citb0in on August 22, 2022, 10:45:30 PMThanks for your kind reply. Glad that you like it, too and found it interesting.I asked because of the GIT infoQuoteThis code is deprecated and should not be usedAs you see in his git repository the last commits were 6-7 years ago. I am not sure if there is a more recent fork of this tool suite. Anyone can shed some light onto, please?BTW: I got this error and didn't look further because I thought that it might be incompatible with the python3 installation on my up-to-date Ubuntu machine. Any clues how to fix that?Code:$ pybtctoolQuote  File \"/usr/local/bin/pybtctool\", line 6    print \"pybtctool <command> <arg1> <arg2> ...\"    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?pybtctool is different than pybitcoin.If yo need pybtctools you can find them here:https://pypi.org/project/pybtctools/https://github.com/danvergara/pybtctoolsAnd the error you get is because you are looking to run the python package like it it was a bash command.The pybitcoin tools should be on:Code:~/.local/lib/python3.10/site-packages/pybitcoin/*and not underCode:/usr/local/bin/...It would be better if you tell us what do you want to use that tool for, maybe we can find another way to it.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "NotATether",
      "created_time": "August 23, 2022, 04:15:09 AM",
      "body": "Quote from: seoincorporation on August 22, 2022, 11:46:46 PMpybtctool is different than pybitcoin.If yo need pybtctools you can find them here:https://pypi.org/project/pybtctools/https://github.com/danvergara/pybtctoolsAnd the error you get is because you are looking to run the python package like it it was a bash command.The pybitcoin tools should be on:Code:~/.local/lib/python3.10/site-packages/pybitcoin/*and not underCode:/usr/local/bin/...It would be better if you tell us what do you want to use that tool for, maybe we can find another way to it.It shouldn't be too difficult to make a basic Python3 port, usually all that needs to be done is remove the references to \"print\", xrange(), and unicode().",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "citb0in",
      "created_time": "August 23, 2022, 10:05:25 AMLast edit: August 23, 2022, 12:07:29 PM by citb0in",
      "body": "Originally I was looking for a Bitcoin toolkit to perform different tasks, like:- transforming private key to public key (compressed and uncompressed)- generating BTC addresses from the pubkey- generating and validating BIP39 mnemonics- generating random seeds or addresses- creating new wallets, or restoring existed ones with mnemonic or private key- receiving wallet info from the blockchain (balance, transactions, fees) either by connecting to a local or remote full-node or by using any blockexplorer on the webIn doing so I came across \"coinkit\" by the developer Pavol Rusnak through some Google research. The mentioned tool coinkit contains a python script called vagabond which is what I am looking for and I guess it might suit my needs for the 1st steps.Unfortunately I can't find anything about coinkit on his GIT repository. Then I searched in GIT and found this. I am not sure but I think this is from him (Pavol Rusnak). Unfortunately very old (last commit happened 10 years ago). However I cloned that git repo and tried to run \"vagabond.py\" but it fails with error code:Code:citb0in@blockbuster:~/coinkit$ ./vagabondQuotebash: ./vagabond: /usr/bin/python: bad interpreter: No such file or directorythat's true, becauseCode:$ which python; echo $?will output error level 1. I have no python executable, I am on Ubuntu Jammy Jellyfish with python3 installedCode:python -VPython 3.10.4I installed python 2to3 and ranCode:2to3 coinkit -n -w -o coinkit-newbut the result does not work. It will remove completely ./coinkit-new/vagabond and also some other python scripts that was in the original ./coinkit folder. No clue what I missed on the 2to3 command line, maybe I need some switch like \"-f all\" or similar? I gave up and went back to the GIT repository SimpleStickyWallet and clicked on the Forks link. Whatever of these forks I click on seems looking same to me, I tried the same stuff with one of these forks but unfortunately no luck either, same results. I found another coinkit GIT repo here which sounds also promising to me but unfortunately this is written in SWIFT which I'm absolutely not familiar with. I would prefer python instead. Here is another coinkit on git, but also outdated. Which way do you suggest to go?Any help appreciated. Thanks to all!",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "ABCbits",
      "created_time": "August 23, 2022, 12:38:51 PMLast edit: August 24, 2022, 12:41:42 PM by ETFbitcoin",
      "body": "Quote from: citb0in on August 23, 2022, 10:05:25 AMWhich way do you suggest to go?I'd suggest to check different Python library which is still actively developed. Usually i'd recommend these library,https://github.com/richardkiss/pycoinhttps://github.com/1200wd/bitcoinlibhttps://github.com/ofek/bit",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "NotATether",
      "created_time": "August 23, 2022, 08:48:45 PM",
      "body": "It's not hard to see that coinkit is abandonware - Pavol has probably moved on to other things.If you want, you're able to manually modify the source code yourself to make it python3-compatible.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "citb0in",
      "created_time": "August 23, 2022, 10:49:57 PM",
      "body": "I tried already, see my last post (converting it with the python tool 2to3). However I guess I need to dig further in python to get some basic understanding of the modules and how to use small snippets of all these mentioned libs. Can you guys suggest any good learning platform for Python? I am asking because there are dozens of them and I have no clue which one to choose. I know here on forum are very skilled devs and certainly one of you can give me a good hint. Thanks so much!",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "n0nce",
      "created_time": "August 23, 2022, 10:55:50 PM",
      "body": "Quote from: citb0in on August 23, 2022, 10:49:57 PMI tried already, see my last post (converting it with the python tool 2to3). However I guess I need to dig further in python to get some basic understanding of the modules and how to use small snippets of all these mentioned libs. Can you guys suggest any good learning platform for Python? I am asking because there are dozens of them and I have no clue which one to choose. I know here on forum are very skilled devs and certainly one of you can give me a good hint. Thanks so much!Just don't use Python 2 libraries. All those errors you got (like the following one) were from running Python 2 programs in Python 3.Code:SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?There is also no reason to port stuff yourself; there are enough working, maintained Python 3 Bitcon libraries.The ones ETFbitcoin mentioned should all work just fine.If you want to learn Python, just go through this website. https://www.learnpython.org/",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "NotATether",
      "created_time": "August 24, 2022, 05:21:46 AM",
      "body": "Quote from: citb0in on August 23, 2022, 10:49:57 PMI tried already, see my last post (converting it with the python tool 2to3). However I guess I need to dig further in python to get some basic understanding of the modules and how to use small snippets of all these mentioned libs. Can you guys suggest any good learning platform for Python? I am asking because there are dozens of them and I have no clue which one to choose. I know here on forum are very skilled devs and certainly one of you can give me a good hint. Thanks so much!Codecademy and W3schools both have good Python tutorials and are free. Some of the others are more data-science oriented and show you how to use Jupyter instead of actual Python.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "citb0in",
      "created_time": "August 26, 2022, 09:45:42 PMLast edit: August 27, 2022, 09:07:46 PM by citb0in",
      "body": "Hello all and sorry for late reply.Quote from: NotATether on August 23, 2022, 08:48:45 PMIt's not hard to see that coinkit is abandonware - Pavol has probably moved on to other things.Quote from: ETFbitcoin on August 23, 2022, 12:38:51 PMI'd suggest to check different Python library which is still actively developed. Usually i'd recommend these library,https://github.com/richardkiss/pycoinhttps://github.com/1200wd/bitcoinlibhttps://github.com/ofek/bitQuote from: n0nce on August 23, 2022, 10:55:50 PMThere is also no reason to port stuff yourself; there are enough working, maintained Python 3 Bitcon libraries. The ones ETFbitcoin mentioned should all work just fine.Thanks for clarification guys! I fully agree, no reason to go with abandoned initially named coinkit. I simply installed pycoin withCode:pip3 install pycoinand the provided ku tool already gave me all the information I needed for my 1st steps. For instance I runCode:ku <myhexkey>and get a bunch of information like private/public keys in various formats (compress/uncompressed) and the addresses etc... very nice and not complicated. Thanks again to you for putting me to the right way Now I need to find out an easy way to query the blockchain for the balance of one or more address/es. If understood correctly pycoin is not capable of querying and thus interacting with the blockchain, is that correct or wrong? I looked forward to \"btctools\" Just like pycoin it is a package within python which can be easily installedCode:pip3 install bitcoinlibwith w.scan() I can query the blockchain and sync my wallet and with w.info() I can display all the wallet info. This outputs also the balance, honestly said I'd like a more convenient way to scan and display only the balance. Let's go one step further and try \"bit\" which is also within pythons package system and can easily be installedCode:pip3 install bitAlthough it seems is not frequently maintained as pycoin or bitcoinlib it claims to be the fastest lib (100x faster than the closest lib) out there. Sounds promising if you ask me   well, tried it out and I was able to fulfill all the needed tasks with the key.commands, so far GREAT impression. The next page called Networking in the documentation explains how we can interact with the block chain. So my previous question about how to easily get the actual balance of my address, simply answered:Code:key.get_balance('btc')et-voila!  I'm impressed and I guess this is the way to go. Now I just need to learn coding Python  but thanks to your grateful suggestions certainly I will succeed some day. Will dig further into Codecademy, W3schools and learnpythonEDIT: Meanwhile, can anyone show me a small python snippet which I could pipe a private key (hex) into or a bitcoin address and which in advance will run the get_balance function for the address? My goal is following: I'd like to have a foo.py and run it as a bash command likeCode:~/foo.py bc1qmyaddressXXXXfoobaror~/foo.py address.lst (where this file contains a bitcoin address in each line)or ~/foo.py privkeyhey.lst (where this file contains private hex key in each line)I'd like to show/save the results only for those addresses that either have a balance > 0.0 or had any transaction in the past.Any help appreciated.Thanks a bunch to all of you, already sent some merits to you. Have a nice weekend everybody, cheers!citb0in",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "ABCbits",
      "created_time": "August 28, 2022, 12:11:04 PM",
      "body": "Quote from: citb0in on August 26, 2022, 09:45:42 PMEDIT: Meanwhile, can anyone show me a small python snippet which I could pipe a private key (hex) into or a bitcoin address and which in advance will run the get_balance function for the address? My goal is following: I'd like to have a foo.py and run it as a bash command likeCode:~/foo.py bc1qmyaddressXXXXfoobaror~/foo.py address.lst (where this file contains a bitcoin address in each line)or ~/foo.py privkeyhey.lst (where this file contains private hex key in each line)I'd like to show/save the results only for those addresses that either have a balance > 0.0 or had any transaction in the past.Any help appreciated.Here's a short example. #!/usr/bin/python3 indicate location of program to run the script. sys.argv is used to obtain passed argument.Code:#!/usr/bin/python3import sysargs = sys.argvprint('args:', args)filepath = args[1]with open(filepath, 'r') as f:  address = f.readlines()  address = [a.strip('\\n') for a in address]# do something with address hereprint(address)Here's content of address.lst i used as example.Code:3HvgFC6VSeT3DZthW4CH6QK9VYmS2KDwA8bc1qaqn5ay35jm3whdj2z8y76n9q4d7wlx6vemrp0k1EhpfhPtnRFUi1B8Z8hSEHrnNv6qDC5abpAfter creating the script and file which contain private key (or other content), you need to make it executable with command chmod +x example.py.Code:$ chmod +x example.py$ ./example.py address.lstargs: ['./example.py', 'address.lst']['3HvgFC6VSeT3DZthW4CH6QK9VYmS2KDwA8', 'bc1qaqn5ay35jm3whdj2z8y76n9q4d7wlx6vemrp0k', '1EhpfhPtnRFUi1B8Z8hSEHrnNv6qDC5abp']",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "citb0in",
      "created_time": "August 28, 2022, 03:03:56 PM",
      "body": "Hi ETFbitcoin and thanks for assistance. Luckily I already figured out how to pass arguments but your example however was very helpful, too. Is it better to use sys.argv or would you suggest to go with the getopt.getopd method instead ? My main problem is how to pass the address.lst to pycoin lib for processing the get_balance part. Unfortunately the provided binary program tool \"ku\" is only for manipulating keys, I didn't find anything related to get_balance there. In that case I would have piped the example.py results to ku, something like thatCode:./example.py | ku get_balancethat would have been convenient and very easy for me as beginner. So I don't understand, how can I pass the address list to pycoins python class get_balance ? And my next question I have is: what is best practice for maximum performance if I -lets say- wanna check millions of addresses ? Should the particular python code read the address.lst into memory first and then process the get_balance part in a for loop ? Sorry if being a dumb question, I am still a beginner looking for some helpful advice and hints.Thank you so much",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "seoincorporation",
      "created_time": "August 28, 2022, 04:27:59 PM",
      "body": "Quote from: citb0in on August 28, 2022, 03:03:56 PMHi ETFbitcoin and thanks for assistance. Luckily I already figured out how to pass arguments but your example however was very helpful, too. Is it better to use sys.argv or would you suggest to go with the getopt.getopd method instead ? My main problem is how to pass the address.lst to pycoin lib for processing the get_balance part. Unfortunately the provided binary program tool \"ku\" is only for manipulating keys, I didn't find anything related to get_balance there. In that case I would have piped the example.py results to ku, something like that....To get the balance from an address you need to call a third party, You can call any block explorer api, you can call your bitcoin core with RPC, or you can directly download the file with all the address containing balance.https://gz.blockchair.com/bitcoin/addresses/That list gets updated daily, i hope it helps, and if you want to manipulate that list i will recommend the topic created by LoyceV for that topic:https://bitcointalk.org/index.php?topic=5254914.0",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "citb0in",
      "created_time": "August 28, 2022, 06:32:30 PM",
      "body": "thanks for the hint, didn't know that you can download the complete blockchain in this human-readable way. However, I would then have to download the 1GB file daily and that at a transfer rate of < 100 kB/S, which is a pain in the a$$ and not acceptable for my project. In addition, I would have an offset of at least 24h, so my queries would not be completely up to date. What's wrong with doing my query directly at the blockchain, i.e. online via pycoin library as initially planned? I thought that I could somehow get pycoin to perform the key.get_balance query online using a self-made Python snippet. How do I do that, how can I access pycoins' routine of get_balance from my own script?On the other hand, the question then arises again, how can I most efficiently perform a query of, say, 1 million addresses with the highest possible throughput. I guess the answer therefore is \"locally, through LoyceV's list\" but is there an alternative to do it online so I can query up-to-date data from the blockchain? And... if I would do it with pycoin library as I actually wanted to do, would the server where pycoin queries the get_balance just block and ban me because they see that I am doing thousands of queries in a short time? Is there a way to circumvent this?",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "citb0in",
      "created_time": "August 29, 2022, 10:15:25 AMLast edit: August 29, 2022, 11:50:47 AM by citb0in",
      "body": "Thanks for your thoughts. I intend to set up and run my own full node in the future. I think I'll have an option (3) then, speaking: my Python application would simply do the queries against my own full-node. Advantages: Third parties don't know which addresses are being queried and I'm not restricted or limited in the amount and throughput of queries. Am I seeing this correctly or do I have a thinking error? Or is \"running an own full-node NOT equal runngin an own blockexplorer\" ?But until I have familiarized myself with the procedures and how-tos for installing and operating a full-node, I will probably have to stick with the offline variant (1GB file from LoyceV) as suggested.However, I'm still facing the problem and question of how to access pycoins' .get_balance function to query one or more addresses online on the blockchain using the URL defined in pycoin. This is my first concernt at the moment, I need to build up the python commands. Am very grateful for any hint and suggestion as always.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "n0nce",
      "created_time": "August 29, 2022, 12:11:24 PM",
      "body": "Quote from: citb0in on August 29, 2022, 10:15:25 AMThanks for your thoughts. I intend to set up and run my own full node in the future. I think I'll have an option (3) then, speaking: my Python application would simply do the queries against my own full-node. Advantages: Third parties don't know which addresses are being queried and I'm not restricted or limited in the amount and throughput of queries. Am I seeing this correctly or do I have a thinking error? Or is \"running an own full-node NOT equal runngin an own blockexplorer\" ?You need to run a full node to run a block explorer on top of it. It's an extra software package you need to install which then queries your local blockchain.If you query the blockchain a lot and value privacy, running a full node is absolutely the way to go.I have a complete full node install guide here (though no instructions for installing a block explorer like https://github.com/mempool/mempool).https://bitcointalk.org/index.php?topic=5366854.0There's a Windows install guide (WSL) including block explorer here:https://bitcointalk.org/index.php?topic=5367296.0",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "citb0in",
      "created_time": "August 29, 2022, 12:15:02 PM",
      "body": "Thanks for the links n0nce, I really appreciate your help. I am running Linux only so I'll need to go for the Linux tuts, but at a later time because I'm really busy with various projects currently. Can you give me any hints how to proceed with the python code to reach my goal?",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "n0nce",
      "created_time": "August 29, 2022, 12:18:41 PM",
      "body": "Quote from: citb0in on August 29, 2022, 12:15:02 PMThanks for the links n0nce, I really appreciate your help. I am running Linux only so I'll need to go for the Linux tuts, but at a later time because I'm really busy with various projects currently. Can you give me any hints how to proceed with the python code to reach my goal?My guide is for Linux, and the second guide is for WSL, so just Ubuntu running on Windows.I'd probably just follow the OpenSUSE install guide though (you can skip the whole Lightning part, just need Bitcoin and Electrs) and then do the mempool Docker install as described here:https://github.com/mempool/mempool/tree/master/docker#configure-with-bitcoin-core--electrum-serverI'm not sure what the issue with the Python code is right now; I can take another look later.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    }
  ]
}