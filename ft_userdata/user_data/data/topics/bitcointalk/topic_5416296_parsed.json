{
  "id": "topic_5416296",
  "title": "brainless",
  "author": "brainless",
  "created_time": "October 07, 2022, 10:19:08 AMLast edit: October 08, 2022, 10:26:10 PM by Mr. Big",
  "content": "Dear Friends2009 after blockchain launch,first peoples found brain wallet mistakes, words or sentence from dic, easily found by hundreds peopleslater some other strategies, where we listen in passed, some exchanges hacked and some wallets provider services were compromisedstill their is lot of strategies exist for pick addresses with balancehere i am posting 1 strategy out of (17), maybe help full to exchanges or corporate or wallet provider, for their own analyzing mistakes, where they maybe could get better secure their servicesNo Begging - Mod-----------------more then 1634 addresses are in used from 2013 to 2021these addresses are maybe under use of exchange or wallet service provider or maybe hardware walletswhats mistake inside is all addresses, from owner side, every privatekey is looks difrent from each otherbut reality is every private key for those addresses are very close and in series if any one address prv key exposed, in series all addresses balances could be in high riskthese addresses are in series like 2 ,6, 10, 20, 26 etcchecking......pick pubkey of any address, pubkey point * 2, and loop it to till 50000 pubkey generate, convert to address, you will get all these 1634 addresses, same you can halve till 50000 pubkey too, Result ...if some one found privatekey 1 of these addresses, can get all addresses private keys by privatekey * 2 mod n, and loop to .. Exposedhere posting 1 pubkey, those who want tough experiment, can halve this pubkey in loop to 20m pubkeys, then to address, you will find all 1634 addresses theirand post your experience here, after see how much peoples have experiment mode, i will post easy solution to check after 24 hourshalve to 20 million pubkey from here0398ce5d78ed1a3b121cbdbd62daecda243a43cf3f201c3599ee78a391d0190950Code:",
  "score": 0,
  "upvotes": 0,
  "downvotes": 0,
  "url": "https://bitcointalk.org/index.php?topic=5416296",
  "comments": [
    {
      "author": "brainless",
      "created_time": "October 07, 2022, 10:20:00 AM",
      "body": "Code:",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "NeuroticFish",
      "created_time": "October 07, 2022, 10:36:46 AM",
      "body": "Quote from: brainless on October 07, 2022, 10:19:08 AMif any one address prv key exposed, in series all addresses balances could be in high riskI'm not sure I understand where's the problem (as in 2022); similarly with any modern HD wallet, it would be utterly stupid to an user to expose any of his private keys.Did you manage to get private keys? I guess not. It is written everywhere nowadays that people should avoid brain wallets since they're unsafe. I think that all brain wallets got emptied years ago (the few addresses from your list I've checked were also emptied years ago).",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "nc50lc",
      "created_time": "October 07, 2022, 11:11:49 AM",
      "body": "Quote from: NeuroticFish on October 07, 2022, 10:36:46 AMI'm not sure I understand where's the problem (as in 2022);I think he's presuming that there could be a centralized service or exchange that have a broken implementation of HD wallet which produces the child keys in series instead of the standard implementation.In fact, all of the addresses he presented belong to a single wallet according to walletexplorer: walletexplorer.com/wallet/00113e9c26df0947/addressesHaving a total of 6,023 linked addresses suggests that it's indeed an exchange or service provider.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "brainless",
      "created_time": "October 08, 2022, 12:19:28 PM",
      "body": "connection exist here too  26 dec 2020https://bitcointalk.org/index.php?topic=5303856.msg55941110#msg55941110",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "gmaxwell",
      "created_time": "October 10, 2022, 01:23:45 AM",
      "body": "Something is wrong here because the order of the group formed by multiplication of 2 mod n is much much larger than 20 million, so you can't generate all these addresses by going 20 million steps in either direction from any of them.Code:sage: F = FiniteField (0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F)C = EllipticCurve ([F (0), F (7)])G = C.lift_x(0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798)N = FiniteField (C.order())sage: N(2).multiplicative_order()1809251394333065553493296640760748560200586941860545380978205674086221273349",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "brainless",
      "created_time": "October 10, 2022, 04:05:58 AM",
      "body": "Quote from: gmaxwell on October 10, 2022, 01:23:45 AMSomething is wrong here because the order of the group formed by multiplication of 2 mod n is much much larger than 20 million, so you can't generate all these addresses by going 20 million steps in either direction from any of them.Code:sage: F = FiniteField (0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F)C = EllipticCurve ([F (0), F (7)])G = C.lift_x(0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798)N = FiniteField (C.order())sage: N(2).multiplicative_order()1809251394333065553493296640760748560200586941860545380978205674086221273349yes , will take time aprox 7 hours for 20m generate multiplication stepsbut in my first message already tippick 1 pubkey from 1634 list, get pubkeyexamplehttps://blockchain.info/q/pubkeyaddr/1121f21h1wyrnm2ipXiKaCULLopeBegt2sresult: 027262bdb402fe5ddc6b1e81cef02bcd673140e6a26857503459a4891920a6a5a9it could be your starting point, now take 50k steps by pubkey point * 2, ( you can create script here, same time generate next pubkey and convert address and verify from 1634 list, and can print results)same 50k steps of pubkey point * 57896044618658097711785492504343953926418782139537452191302581570759080747169(halv the point)and same convert and verufy address, print)up and down side 50k +50k, take few minutesas for 20m halve required too much time, for this i create an other thread, for discus this issue, where i ask developer, just for basic add/sub/mul conversion creator/generator by pycuda or cuda tools , when said tools available, these job are for seconds for millions pointhttps://bitcointalk.org/index.php?topic=5409721.0",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "_Counselor",
      "created_time": "October 10, 2022, 05:33:06 AM",
      "body": "Quote from: brainless on October 10, 2022, 04:05:58 AMas for 20m halve required too much time, for this i create an other thread, for discus this issue, where i ask developer, just for basic add/sub/mul conversion creator/generator by pycuda or cuda tools , when said tools available, these job are for seconds for millions pointhttps://bitcointalk.org/index.php?topic=5409721.0If you need 50k keys by sequential halving the original, why use expensive division on each step, you just can take \"last\" key (original / 2^50000), and then generate all keys by fast doubling.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "gmaxwell",
      "created_time": "October 10, 2022, 08:17:57 AM",
      "body": "You can't do 1809251394333065553493296640760748560200586941860545380978205674086221273349 operations in several hours either.I don't have any reason to doubt that you've listed a number of points related by doubling, but the claim that you were able to wrap around and enumerate all of them from any starting position and then moving in one direction (either doubling or halving) can't be true, AFAICT.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "_Counselor",
      "created_time": "October 10, 2022, 08:59:13 AM",
      "body": "Quote from: gmaxwell on October 10, 2022, 08:17:57 AMYou can't do 1809251394333065553493296640760748560200586941860545380978205674086221273349 operations in several hours either.I don't have any reason to doubt that you've listed a number of points related by doubling, but the claim that you were able to wrap around and enumerate all of them from any starting position and then moving in one direction (either doubling or halving) can't be true, AFAICT.He doesn't talking about mapping all points, which can be generated by doubling/halving.As I understand it, he found a sequence of keys that are generated in this way and leads to the used addresses.It looks like a manual generation of something like HD wallet with bad realisation. Something like if you take first address key (\"master key\") and derive other wallet addresses just by doubling \"master key\" N times. It is obvious that such an algorithm, unlike a normal HD wallet, allows you to recover the keys to all addresses, if you know any one of them.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "brainless",
      "created_time": "October 10, 2022, 12:37:02 PM",
      "body": "Quote from: _Counselor on October 10, 2022, 08:59:13 AMQuote from: gmaxwell on October 10, 2022, 08:17:57 AMYou can't do 1809251394333065553493296640760748560200586941860545380978205674086221273349 operations in several hours either.I don't have any reason to doubt that you've listed a number of points related by doubling, but the claim that you were able to wrap around and enumerate all of them from any starting position and then moving in one direction (either doubling or halving) can't be true, AFAICT.He doesn't talking about mapping all points, which can be generated by doubling/halving.As I understand it, he found a sequence of keys that are generated in this way and leads to the used addresses.It looks like a manual generation of something like HD wallet with bad realisation. Something like if you take first address key (\"master key\") and derive other wallet addresses just by doubling \"master key\" N times. It is obvious that such an algorithm, unlike a normal HD wallet, allows you to recover the keys to all addresses, if you know any one of them.Agree",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "gmaxwell",
      "created_time": "October 10, 2022, 02:43:37 PM",
      "body": "Quote from: brainless on October 07, 2022, 10:19:08 AMpick pubkey of any address, pubkey point * 2, and loop it to till 50000 pubkey generate, convert to address, you will get all these 1634 addresses, same you can halve till 50000 pubkey too, What am I failing to understand here, then? Because to me this clearly appears to saying that you can \"pick any of the pubkeys\" and double it to generate all 1634 addresses.    Or, alternatively, you can do the same by repeated halving.Because the order is ~2^250, that isn't possible.  Now, if it said that you could start at the first (in sequence rather than sorted order) and double to generate the reset or the last and halve to generate the reset-- sure, that is plausible.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "NotATether",
      "created_time": "October 10, 2022, 02:52:32 PM",
      "body": "A bit off-topic but...SAGE seems to have represented these finite fields and curves & operations really well. It would be nice if this  functionality could be had in other languages as well - especially C-C++ where there are many applications for this kind of thing because of its raw speed, but are hard to implement because all the crypto libraries for these languages are half-arsed or incomplete (libsecp256k1 is the closest that replicates SAGE stuff but a general-purpose curve and field library would be a nice to-have).",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "CrunchyF",
      "created_time": "October 10, 2022, 08:19:16 PM",
      "body": "Quote from: brainless on October 10, 2022, 04:05:58 AMQuote from: gmaxwell on October 10, 2022, 01:23:45 AMSomething is wrong here because the order of the group formed by multiplication of 2 mod n is much much larger than 20 million, so you can't generate all these addresses by going 20 million steps in either direction from any of them.Code:sage: F = FiniteField (0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F)C = EllipticCurve ([F (0), F (7)])G = C.lift_x(0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798)N = FiniteField (C.order())sage: N(2).multiplicative_order()1809251394333065553493296640760748560200586941860545380978205674086221273349yes , will take time aprox 7 hours for 20m generate multiplication stepsbut in my first message already tippick 1 pubkey from 1634 list, get pubkeyexamplehttps://blockchain.info/q/pubkeyaddr/1121f21h1wyrnm2ipXiKaCULLopeBegt2sresult: 027262bdb402fe5ddc6b1e81cef02bcd673140e6a26857503459a4891920a6a5a9it could be your starting point, now take 50k steps by pubkey point * 2, ( you can create script here, same time generate next pubkey and convert address and verify from 1634 list, and can print results)same 50k steps of pubkey point * 57896044618658097711785492504343953926418782139537452191302581570759080747169(halv the point)and same convert and verufy address, print)up and down side 50k +50k, take few minutesas for 20m halve required too much time, for this i create an other thread, for discus this issue, where i ask developer, just for basic add/sub/mul conversion creator/generator by pycuda or cuda tools , when said tools available, these job are for seconds for millions pointhttps://bitcointalk.org/index.php?topic=5409721.0this following python script (you need to have bit and gmpy2 installed) can do the work in 2 seconds...Code:from bit.format import public_key_to_address,public_key_to_coords,coords_to_public_keyfrom bit.utils import bytes_to_hex,hex_to_bytesimport gmpy2def point_double_gmp(point): x1, y1 = point m = (3 *gmpy2.powmod(x1, 2,P)) * gmpy2.invert(2 * y1,P) x3 = gmpy2.powmod(m, 2,P) - x1 - x1 y3 = y1 + m * (x3 - x1) result = (int(x3%P),int(-y3%P)) return resultP=0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2fstart_pubk='0398ce5d78ed1a3b121cbdbd62daecda243a43cf3f201c3599ee78a391d0190950'start_coord=public_key_to_coords(hex_to_bytes(start_pubk))pt=start_coordfor m in range(1,50001): pt=point_double_gmp(pt) x,y=pt mulmod=\"2^%d mod P \"%m pubk=coords_to_public_key(x,y,compressed=True) add=public_key_to_address(pubk) print(\"pubk * %s ==> pubk:%s add:%s\"%(mulmod,bytes_to_hex(pubk),add))",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "brainless",
      "created_time": "October 11, 2022, 04:31:05 AM",
      "body": "Quote from: CrunchyF on October 10, 2022, 08:19:16 PMQuote from: brainless on October 10, 2022, 04:05:58 AMQuote from: gmaxwell on October 10, 2022, 01:23:45 AMSomething is wrong here because the order of the group formed by multiplication of 2 mod n is much much larger than 20 million, so you can't generate all these addresses by going 20 million steps in either direction from any of them.Code:sage: F = FiniteField (0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F)C = EllipticCurve ([F (0), F (7)])G = C.lift_x(0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798)N = FiniteField (C.order())sage: N(2).multiplicative_order()1809251394333065553493296640760748560200586941860545380978205674086221273349yes , will take time aprox 7 hours for 20m generate multiplication stepsbut in my first message already tippick 1 pubkey from 1634 list, get pubkeyexamplehttps://blockchain.info/q/pubkeyaddr/1121f21h1wyrnm2ipXiKaCULLopeBegt2sresult: 027262bdb402fe5ddc6b1e81cef02bcd673140e6a26857503459a4891920a6a5a9it could be your starting point, now take 50k steps by pubkey point * 2, ( you can create script here, same time generate next pubkey and convert address and verify from 1634 list, and can print results)same 50k steps of pubkey point * 57896044618658097711785492504343953926418782139537452191302581570759080747169(halv the point)and same convert and verufy address, print)up and down side 50k +50k, take few minutesas for 20m halve required too much time, for this i create an other thread, for discus this issue, where i ask developer, just for basic add/sub/mul conversion creator/generator by pycuda or cuda tools , when said tools available, these job are for seconds for millions pointhttps://bitcointalk.org/index.php?topic=5409721.0this following python script (you need to have bit and gmpy2 installed) can do the work in 2 seconds...Code:from bit.format import public_key_to_address,public_key_to_coords,coords_to_public_keyfrom bit.utils import bytes_to_hex,hex_to_bytesimport gmpy2def point_double_gmp(point): x1, y1 = point m = (3 *gmpy2.powmod(x1, 2,P)) * gmpy2.invert(2 * y1,P) x3 = gmpy2.powmod(m, 2,P) - x1 - x1 y3 = y1 + m * (x3 - x1) result = (int(x3%P),int(-y3%P)) return resultP=0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2fstart_pubk='0398ce5d78ed1a3b121cbdbd62daecda243a43cf3f201c3599ee78a391d0190950'start_coord=public_key_to_coords(hex_to_bytes(start_pubk))pt=start_coordfor m in range(1,50001): pt=point_double_gmp(pt) x,y=pt mulmod=\"2^%d mod P \"%m pubk=coords_to_public_key(x,y,compressed=True) add=public_key_to_address(pubk) print(\"pubk * %s ==> pubk:%s add:%s\"%(mulmod,bytes_to_hex(pubk),add))script about double point, could you post multiplication point script too ?",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "CrunchyF",
      "created_time": "October 11, 2022, 05:02:14 PM",
      "body": "Quote from: brainless on October 11, 2022, 04:31:05 AMOk but a multiplication of what by what ?...sorry i d'ont understand",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "j2002ba2",
      "created_time": "October 12, 2022, 12:19:00 AM",
      "body": "Quote from: NotATether on October 10, 2022, 02:52:32 PMA bit off-topic but...SAGE seems to have represented these finite fields and curves & operations really well. It would be nice if this  functionality could be had in other languages as well - especially C-C++ where there are many applications for this kind of thing because of its raw speed, but are hard to implement because all the crypto libraries for these languages are half-arsed or incomplete (libsecp256k1 is the closest that replicates SAGE stuff but a general-purpose curve and field library would be a nice to-have).I have used PARI/GP C libraryThe following is with the provided gp shell (some empty lines omitted):Code:gp > ellgroup(ellinit([0,7]), 2^256 - 2^32 - 977)%1 = [115792089237316195423570985008687907852837564279074904382605163141518161494337]gp > factor(%1[1] - 1)%2 =[                                2 6][                                3 1][                              149 1][                              631 1][               107361793816595537 1][            174723607534414371449 1][341948486974166000522343609283189 1]The easiest for me was doing pari_init_opts, then (after recording avma) using gp_read_str with corresponding string (instead of interfacing each and every function), and then pari_sprintf(\"%Ps\",...) to get the result as text (then recovering avma), and parse it to something meaningful.Couldn't find a function returning the multiplicative order of point though.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "brainless",
      "created_time": "October 12, 2022, 01:11:23 PM",
      "body": "Quote from: CrunchyF on October 11, 2022, 05:02:14 PMQuote from: brainless on October 11, 2022, 04:31:05 AMOk but a multiplication of what by what ?...sorry i d'ont understandfor multiplication or halve the point (50k loop)Code:from fastecdsa.curve import secp256k1from fastecdsa.point import Pointfrom fastecdsa import keys, curvedef c2ux(point): p_hex = 'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F' p = int(p_hex, 16) compressed_key_hex = point x_hex = compressed_key_hex[2:66] x = int(x_hex, 16) prefix = compressed_key_hex[0:2] y_square = (pow(x, 3, p)  + 7) % p y_square_square_root = pow(y_square, (p+1) * pow(4, p - 2, p) % p , p) if (prefix == \"02\" and y_square_square_root & 1) or (prefix == \"03\" and not y_square_square_root & 1):     y = (-y_square_square_root) % p else:     y = y_square_square_root return x_hexdef c2uy(point): p_hex = 'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F' p = int(p_hex, 16) compressed_key_hex = point x_hex = compressed_key_hex[2:66] x = int(x_hex, 16) prefix = compressed_key_hex[0:2] y_square = (pow(x, 3, p)  + 7) % p y_square_square_root = pow(y_square, (p+1) * pow(4, p - 2, p) % p , p) if (prefix == \"02\" and y_square_square_root & 1) or (prefix == \"03\" and not y_square_square_root & 1):     y = (-y_square_square_root) % p else:     y = y_square_square_root computed_y_hex = format(y, '064x') return computed_y_hexdef cpub(x,y): prefix = '02' if y % 2 == 0 else '03' c = prefix+ hex(x)[2:].zfill(64) return cwith open('in.txt') as f:  for line in f:    line=line.strip()    xs = int(c2ux(line),16)    ys = int(c2uy(line),16)    S = Point(xs, ys, curve=secp256k1)    xsorg = 0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798    ysorg = 0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8    Sorg = Point(xsorg, ysorg, curve=secp256k1)    for i in range(0,50000):      S=S*57896044618658097711785492504343953926418782139537452191302581570759080747169      xx=S.x      yy=S.y      pub04=cpub(xx,yy)      print(pub04,file=open(\"out.txt\", \"a\"))",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "NotATether",
      "created_time": "October 12, 2022, 04:01:45 PM",
      "body": "Quote from: j2002ba2 on October 12, 2022, 12:19:00 AMI have used PARI/GP C libraryThe following is with the provided gp shell (some empty lines omitted):Code:gp > ellgroup(ellinit([0,7]), 2^256 - 2^32 - 977)%1 = [115792089237316195423570985008687907852837564279074904382605163141518161494337]gp > factor(%1[1] - 1)%2 =[                                2 6][                                3 1][                              149 1][                              631 1][               107361793816595537 1][            174723607534414371449 1][341948486974166000522343609283189 1]The easiest for me was doing pari_init_opts, then (after recording avma) using gp_read_str with corresponding string (instead of interfacing each and every function), and then pari_sprintf(\"%Ps\",...) to get the result as text (then recovering avma), and parse it to something meaningful.Couldn't find a function returning the multiplicative order of point though.Amazing stuff, I'll definitely check it out!",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "brainless",
      "created_time": "October 12, 2022, 06:10:51 PM",
      "body": "Quote from: j2002ba2 on October 12, 2022, 12:19:00 AMQuote from: NotATether on October 10, 2022, 02:52:32 PMA bit off-topic but...SAGE seems to have represented these finite fields and curves & operations really well. It would be nice if this  functionality could be had in other languages as well - especially C-C++ where there are many applications for this kind of thing because of its raw speed, but are hard to implement because all the crypto libraries for these languages are half-arsed or incomplete (libsecp256k1 is the closest that replicates SAGE stuff but a general-purpose curve and field library would be a nice to-have).I have used PARI/GP C libraryThe following is with the provided gp shell (some empty lines omitted):Code:gp > ellgroup(ellinit([0,7]), 2^256 - 2^32 - 977)%1 = [115792089237316195423570985008687907852837564279074904382605163141518161494337]gp > factor(%1[1] - 1)%2 =[                                2 6][                                3 1][                              149 1][                              631 1][               107361793816595537 1][            174723607534414371449 1][341948486974166000522343609283189 1]The easiest for me was doing pari_init_opts, then (after recording avma) using gp_read_str with corresponding string (instead of interfacing each and every function), and then pari_sprintf(\"%Ps\",...) to get the result as text (then recovering avma), and parse it to something meaningful.Couldn't find a function returning the multiplicative order of point though.are you trying to find magic numbers, which part i mention here before a yearhttps://bitcointalk.org/index.php?topic=5244940.msg57373246#msg57373246here is full list of numbersCode
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    }
  ]
}