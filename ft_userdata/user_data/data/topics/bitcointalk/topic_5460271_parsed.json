{
  "id": "topic_5460271",
  "title": "cogsmachine",
  "author": "cogsmachine",
  "created_time": "July 19, 2023, 02:00:10 AM",
  "content": "Project premise Web 3 services are vended. A COG is a Web 3 vending machine that exchanges services for Tokens.   Overview and Ethos The COGSmachine community of developers created the COGSmachine platform without VC funding. COGSmachine is a network of humans and synthetics building technology for the betterment and advancement of society.DescriptionA COG is a single machine that run COGSmachine software and communicates with other machines using $COGS tokens. Networked COG(s) communicating with one another speaking the $COGS protocol comprise a COGSmachine.   ImplementationThe COGSmachine architecture is shown here --> :  https://pbs.twimg.com/media/Fx-VlxUXoAUIRUW?format=jpg&name=medium. COGSmachine software runs in a docker container on a linux host and is packaged with NGINX, uWSGI, Flask, Python. Each COG has a digital identity via a \"Bound Token\" (BT), COGSmachine Qualified Domain Name (CQDN) and companion SSL Cert.A COG exposes services/routes with Flask and services are invoked on CQDN named nodes over HTTPS(SSL/TLS) using SHA-256 tokens.  Transactions are verified via block hashes on the “cogschain”.  Developers can create Custom Tokenized Web3 actions with COGSmachine classes and Python Flask.  If hashes are validated via verifyHash the Flask route logic will execute.    Verified transactions are propagated through the network by the $COGS protocol. PrivacyThe 'cogschain' is stores no human readable information.   StatusTestnet is in alpha and will be go live later this summer. ... to be continued ...",
  "score": 0,
  "upvotes": 0,
  "downvotes": 0,
  "url": "https://bitcointalk.org/index.php?topic=5460271",
  "comments": [
    {
      "author": "cogsmachine",
      "created_time": "July 19, 2023, 11:31:09 AM",
      "body": ".. continued from above ..ConsensusCOGSmachine consensus is an event driven network.  Transactional events are observed by COGS in the Witness Pool and multi factor verifiable.   Since each machine has identity via BT, SSL cert, and event driven hashed blocks (see: https://twitter.com/COGSmachine/status/1673887121864634369?s=20), double spend, forgery are mitigated.   Vault/Wallet Application is but one of many possibilities.   For example here is a p2p private chat app that exchanges $COGS for chat messages.  The message is sent with $COGS token(s) and received by the peer upon consensus.  https://twitter.com/COGSmachine/status/1669752168260284428?s=20  Notice that this is a chat between the machine identity 18wheel.eddie.cog and cogs.cogs.cogs  These are CQDNs on the cogschain .  CQDNs are resolvable with the resolveCQDN method of the COGSchain class. e.g.:cchain = COGSchain() # cchain instance of COGSchain classbt,routes = cchain.resolveCQDN(cqdn) # return bound tocken bt and route for cqdn",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    }
  ]
}