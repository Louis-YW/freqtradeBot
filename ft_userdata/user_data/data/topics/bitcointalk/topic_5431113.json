{
  "id": "topic_5431113",
  "title": "Ashley.Livetree",
  "author": "Ashley.Livetree",
  "created_time": "December 23, 2022, 12:23:32 PM",
  "content": "Hi What is the best way to port EVM based smart contracts (solidity) to Bitcoin?Is the best way to do to use the lighting network?Please find my repo on Github, full disclosure I am the founder of Livetree.com the app is designed for mass adoption.The smart contracts are currently deployed to 6 EVM chains (Ethereum, Moonbeam, Moonriver, Celo, Unique, Quartz) and I think it could potentially really add traction to the mass adoption of Bitcoin - if we can support it, however, I am not sure if it is even possible.  Any technical advise and guidance would be appreciated. Thank you.Ashley",
  "score": 0,
  "upvotes": 0,
  "downvotes": 0,
  "url": "https://bitcointalk.org/index.php?topic=5431113",
  "comments": [
    {
      "author": "Pmalek",
      "created_time": "December 23, 2022, 12:42:00 PM",
      "body": "I am certainly not the person to talk to about this, but I don't think it's doable on layer 1. You mentioned yourself that Ethereum uses Solidity and Bitcoin uses Bitcoin Script. So you can't import something written in Solidity on Bitcoin's layer 1 chain. Layer 2 is something totally different though. RSK, for example, supports Ethereum-native smart contracts that can be imported onto a layer 2 bitcoin chain.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "Ashley.Livetree",
      "created_time": "December 23, 2022, 01:08:03 PM",
      "body": "@Pmalek thank you that's what I thought but I was wondering if there is some way that perhaps I could use the #Collective's Treasury instead of the native token (ETH, GLMR etc) but backed by Bitcoin? The requirements would be:Deposit Bitcoin into a Treasury type structure (or wallet)ERC20 tokens (perhaps wrapped?) to be able to redeem a fractional percentageMaybe that way we dont port the entire set of smart contracts just the underlying store of value?  Shooting in the dark here tbh.  Thanks for the help.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "NotATether",
      "created_time": "December 23, 2022, 02:06:07 PM",
      "body": "You can't directly do this on Bitcoin because our Layer 1 does not support smart contracts at all. You need to wait for a smart-contract layer to be created for Bitcoin and then port your scripts to that.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "Ashley.Livetree",
      "created_time": "December 23, 2022, 11:58:09 PM",
      "body": "Gotcha thank you @NotATeacher I agree with you.I think the only way to do it is with a wrapped BTC coin. I found this https://moonbeam.network/announcements/interlay-integrates-with-moonbeam/I don’t see why we can’t pay royalties in xciBTCI’ve not used interlay or heard of them before are they connected to the real BTC community - do you or anyone know of them and the validity of interlay? I’ll connect with the interlay team and see what they think.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "pooya87",
      "created_time": "December 24, 2022, 03:58:19 AM",
      "body": "Quote from: NotATether on December 23, 2022, 02:06:07 PMour Layer 1 does not support smart contracts at all.Every single bitcoin script IS a smart contract! Only certain functionalities that a \"currency\" does not really need are not available in bitcoin scripts.Quote from: Ashley.Livetree on December 23, 2022, 12:23:32 PMThe smart contracts are currently deployed to 6 EVM chains (Ethereum, Moonbeam, Moonriver, Celo, Unique, Quartz) and I think it could potentially really add traction to the mass adoption of BitcoinI disagree because none of those platforms have any adoption whatsoever except gamblers (who invest in tokens hoping profit) and scammers (who create tokens to empty other people's pockets). They have shown no real world applications so far.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "Pmalek",
      "created_time": "December 24, 2022, 07:59:26 AM",
      "body": "Quote from: Ashley.Livetree on December 23, 2022, 01:08:03 PM@Pmalek thank you that's what I thought but I was wondering if there is some way that perhaps I could use the #Collective's Treasury instead of the native token (ETH, GLMR etc) but backed by Bitcoin? Sorry, I can't help you there. I have no idea what the Collective Treasury is.Quote from: Ashley.Livetree on December 23, 2022, 11:58:09 PMI think the only way to do it is with a wrapped BTC coin. Wrapped bitcoin and similar bitcoin-pegged tokens already exist in various forms and blockchains, but they are not bitcoin. You will hear different opinions about these assets ranging from how extremely useful they are to them being a scam, altcoin, or shit token. Locking up real bitcoin to get a bitcoin-pegged token can result in the loss of your real bitcoin if the issuers stop swapping them back. I don't think this will ever get much popularity among bitcoiners. Quote from: pooya87 on December 24, 2022, 03:58:19 AMEvery single bitcoin script IS a smart contract! Only certain functionalities that a \"currency\" does not really need are not available in bitcoin scripts. That's correct. Bitcoin has limited capabilities when it comes to its smart contract functions. It's not turing complete like Ethereum's Solidity is.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "n0nce",
      "created_time": "December 25, 2022, 03:09:52 AMLast edit: December 25, 2022, 03:22:08 AM by n0nce",
      "body": "Quote from: Ashley.Livetree on December 23, 2022, 11:58:09 PMI think the only way to do it is with a wrapped BTC coin.No Bitcoiner cares about, wants or would even exchange their actual BTC for wrapped BTC to then interact with a smart contract.The right way to do that is building on RGB.Quote from: https://www.rgbfaq.com/what-is-rgbRGB is a scalable & confidential smart contracts system for Bitcoin & lightning network. They embrace concepts of private & mutual ownership, abstraction and separation of concerns and represent \"post-blockchain\", Turing-complete form of trustless distributed computing which does not require introduction of \"tokens\".Here you have the implementation for backend and frontend:https://github.com/RGB-WG/rgb-nodehttps://github.com/RGB-WG/rgb-sdkThere's a client for RGB protocol assets in MyCitadel.You will just need to port your contract to Contractum language.There is a very similar, second such project and to my knowledge, they're also somewhat working together (might be wrong?), called Taro.While I'm a critic of the Lightning Labs team myself, I just found out that their latest blog post is about Taro and they have an alpha release out since September.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "garlonicon",
      "created_time": "December 25, 2022, 12:50:09 PM",
      "body": "QuoteNo Bitcoiner cares about, wants or would even exchange their actual BTC for wrapped BTC to then interact with a smart contract.Lightning Network is a BTC wrapped in a multisig. And yes, \"wrapped\" is the correct word for that, because if you \"wrap\" it in one channel, you cannot \"wrap\" it in another at the same time, and on-chain interaction is needed for each wrapping and unwrapping operation. Also note that in LN there are millisatoshis, so if you execute something on a single millisatoshi, then it would not exist outside of LN (so million users having 1 millisatoshi each will have zero BTC on-chain, there could be 1000000-of-1000000 multisig with 1000 sats, but it cannot be unwrapped and splitted between million UTXOs, because of standardness and dust limit).Also note that each Taproot address is potentially wrapped N-of-N multisig. Because from the on-chain perspective, you can have 1000-of-1000 multisig, and it will be expressed as a single Schnorr signature. And then, you can have this N-of-N \"everyone agrees\" signature as a base for any Turing-complete contract you want.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "BlackHatCoiner",
      "created_time": "December 25, 2022, 01:06:17 PM",
      "body": "Quote from: Ashley.Livetree on December 23, 2022, 12:23:32 PMThe smart contracts are currently deployed to 6 EVM chains (Ethereum, Moonbeam, Moonriver, Celo, Unique, Quartz) and I think it could potentially really add traction to the mass adoption of BitcoinExplain me how. What need does these smart contracts satisfy to help on achieving global adoption? None, as far as anyone can tell. Mass adoption is rather not happening due to responsibility issues, misinformation and not really big need for bitcoin.Quote from: Ashley.Livetree on December 23, 2022, 12:23:32 PMif we can support it, however, I am not sure if it is even possible.  Any technical advise and guidance would be appreciated. It is technically possible with sidechain. The one with the most development is RGB that is mentioned above.Quote from: garlonicon on December 25, 2022, 12:50:09 PMAnd then, you can have this N-of-N \"everyone agrees\" signature as a base for any Turing-complete contract you want.Can you give us an example?",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "garlonicon",
      "created_time": "December 25, 2022, 02:05:57 PM",
      "body": "QuoteQuoteAnd then, you can have this N-of-N \"everyone agrees\" signature as a base for any Turing-complete contract you want.Can you give us an example?Well, N-of-N multisig means that \"everyone agrees\" on everything what happened on some second layer. Then, Bitcoin Script can be as complex as it is needed, because it can be splitted into many transactions. It is just a matter of cost. We have opcodes like OP_NOT, OP_TRUE, OP_FALSE and OP_EQUAL. There are also more complex opcodes, but it is possible to express any loops and other operations as a sequence of opcodes, repeated the maximum times it can execute (the more complex it will be, the more bytes it will take, for example \"OP_2DUP OP_ADD OP_2DUP OP_ADD ...\" will produce Fibonacci sequence). And then, you just need two things: one is the chain of Script operations, that will move all coins into fees, and another is the final transaction that takes the end of that chain (the last coins before being converted to fees), and the coins of all participants.Then, all participants have a choice: execute everything off-chain, and reach agreement (the cheapest and the most private option), or execute everything on-chain (that is costly, it requires revealing parts that are signed upfront (to protect Script from being stopped or altered in the middle by some third party), and requires taking TapScript path, that pushes the whole chain of transactions, to execute for example \"SHA-3(something)==hash\".So, yes, Bitcoin can be Turing-complete even today, but then you have to be ready for spending for example 100 BTC for executing some contract on-chain. Or you can try it on regtest or testnet3 to be convinced. But in general, it is better to reach off-chain agreement, or propose a soft-fork to add OP_SOMETHING, than to use that costly method to do it today.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "n0nce",
      "created_time": "December 26, 2022, 02:31:57 PM",
      "body": "Quote from: garlonicon on December 25, 2022, 12:50:09 PMQuoteNo Bitcoiner cares about, wants or would even exchange their actual BTC for wrapped BTC to then interact with a smart contract.Lightning Network is a BTC wrapped in a multisig. And yes, \"wrapped\" is the correct word for that, because if you \"wrap\" it in one channel, you cannot \"wrap\" it in another at the same time, and on-chain interaction is needed for each wrapping and unwrapping operation.I was speaking of wrapped BTC as in WBTC, e.g. defined here (completely relying on a custodian who promises the 1:1 peg - again, something I will continue to say is completely anti-Bitcoin). https://trustwallet.com/blog/what-is-wrapped-wbtcMaybe you call lightning-BTC 'wrapped', someone else will call it 'sandwiched' or 'hot-dogged'..  These are all no common definitions for Lightning, at all.Nobody would call Ethereum locked in a smart contract 'wrapped'. What are they? Eth wrapped in Eth? Makes no sense.Quote from: garlonicon on December 25, 2022, 12:50:09 PMAlso note that in LN there are millisatoshis, so if you execute something on a single millisatoshi, then it would not exist outside of LN (so million users having 1 millisatoshi each will have zero BTC on-chain, there could be 1000000-of-1000000 multisig with 1000 sats, but it cannot be unwrapped and splitted between million UTXOs, because of standardness and dust limit).Except even owning 1 sat would be under the dust limit. Millisats are not the issue. You will lose up to 1sat at every channel close; there's no denying that, but I don't see the problem. It's also totally off-topic.Quote from: garlonicon on December 25, 2022, 02:05:57 PMIt is just a matter of cost. We have opcodes like OP_NOT, OP_TRUE, OP_FALSE and OP_EQUAL. There are also more complex opcodes, but it is possible to express any loops and other operations as a sequence of opcodes, repeated the maximum times it can execute (the more complex it will be, the more bytes it will take, for example \"OP_2DUP OP_ADD OP_2DUP OP_ADD ...\" will produce Fibonacci sequence).That's not Turing-completeness, though. Having to unroll loops and break things down to individual mathematical operations, means it's exactly not Turing-complete.https://en.wikipedia.org/wiki/Turing_completenessBitcoin script just doesn't have (and never will have) recursion and no unbounded loops (which you sometimes need). Suggesting you can unroll any loop assumes the input of the program doesn't change the amount of iterations needed. It's highly probable that a smart contract needs to calculate something more or fewer times depending on the user input.It's also simply completely unsuited for writing a smart contract like what we're talking about here. RGB is made for that; also in terms of programming language style and everything around it. It is nonsensical suggesting OP to port it to Bitcoin Script, just because in a thought experiment, it may be possible using 100BTC of transaction fee.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "Ashley.Livetree",
      "created_time": "December 27, 2022, 09:41:57 AM",
      "body": "Quote from: n0nce on December 25, 2022, 03:09:52 AMQuote from: Ashley.Livetree on December 23, 2022, 11:58:09 PMI think the only way to do it is with a wrapped BTC coin.No Bitcoiner cares about, wants or would even exchange their actual BTC for wrapped BTC to then interact with a smart contract.The right way to do that is building on RGB.Quote from: https://www.rgbfaq.com/what-is-rgbRGB is a scalable & confidential smart contracts system for Bitcoin & lightning network. They embrace concepts of private & mutual ownership, abstraction and separation of concerns and represent \"post-blockchain\", Turing-complete form of trustless distributed computing which does not require introduction of \"tokens\".Here you have the implementation for backend and frontend:https://github.com/RGB-WG/rgb-nodehttps://github.com/RGB-WG/rgb-sdkThere's a client for RGB protocol assets in MyCitadel.You will just need to port your contract to Contractum language.There is a very similar, second such project and to my knowledge, they're also somewhat working together (might be wrong?), called Taro.While I'm a critic of the Lightning Labs team myself, I just found out that their latest blog post is about Taro and they have an alpha release out since September.Many thanks for the links @n0nce! I've started learning RGB schema and Taro. From my initial install I see1) It could be too expensive to execute this on chain2) The functionality is really limited to just sub-assets on bitcoin (and let's be honest do we really need shit coins on Bitcoin)3) Both seem far away from any kind of production-readiness (documentation is terrible, sample code is full of issues)4) Both solutions appear quite hacky. I mean Bitcoin just isn't designed to do this in my opinion. I would humbly propose it might be better to:A) Hard fork the entire bitcoin chain and add proper support for a totally new programming paradigm (which, let's face it, is not going to happen)B) Create a completely separate Bitcoin Bridge Layer blockchain-VM (perhaps WASAM based) that sits on top of Bitcoin and has very tight coupling so to perform ONLY very simple pre-existing Bitcoin opcodes (OP_(Math and bools) and within a maximum execution limit to ensure it is always cost free (let's say 21 operations to keep miners happy:). Perhaps this Bitcoin Bridge Layer could then support different VMs and tooling such as EVM or Substrate/Polkadot or whatever else is flavour of next month. Whether the Bridge Layer is true Turing complete or not, perhaps, then just become irrelevant as Bitcoin is and the bridge will discard anything that falls outside of 21. This would have the advantage of opening up Bitcoin to a whole new set of developers and pre-existing dev tools.I will continue hacking about and see where I get to on it. Why are you a critic of Lightning Labs incidentally? Quote from: garlonicon on December 25, 2022, 02:05:57 PMQuoteQuoteAnd then, you can have this N-of-N \"everyone agrees\" signature as a base for any Turing-complete contract you want.Can you give us an example?Well, N-of-N multisig means that \"everyone agrees\" on everything what happened on some second layer. Then, Bitcoin Script can be as complex as it is needed, because it can be splitted into many transactions. It is just a matter of cost. We have opcodes like OP_NOT, OP_TRUE, OP_FALSE and OP_EQUAL. There are also more complex opcodes, but it is possible to express any loops and other operations as a sequence of opcodes, repeated the maximum times it can execute (the more complex it will be, the more bytes it will take, for example \"OP_2DUP OP_ADD OP_2DUP OP_ADD ...\" will produce Fibonacci sequence). And then, you just need two things: one is the chain of Script operations, that will move all coins into fees, and another is the final transaction that takes the end of that chain (the last coins before being converted to fees), and the coins of all participants.Then, all participants have a choice: execute everything off-chain, and reach agreement (the cheapest and the most private option), or execute everything on-chain (that is costly, it requires revealing parts that are signed upfront (to protect Script from being stopped or altered in the middle by some third party), and requires taking TapScript path, that pushes the whole chain of transactions, to execute for example \"SHA-3(something)==hash\".So, yes, Bitcoin can be Turing-complete even today, but then you have to be ready for spending for example 100 BTC for executing some contract on-chain. Or you can try it on regtest or testnet3 to be convinced. But in general, it is better to reach off-chain agreement, or propose a soft-fork to add OP_SOMETHING, than to use that costly method to do it today.Thanks for the input I think there is something here which could serve as the basis for the proposed, Bitcoin Bridge Layer VM, though the op code approach would still need to be inserted into into the Bitcoin core code for maximum security.Quote from: BlackHatCoiner on December 25, 2022, 01:06:17 PMQuote from: Ashley.Livetree on December 23, 2022, 12:23:32 PMThe smart contracts are currently deployed to 6 EVM chains (Ethereum, Moonbeam, Moonriver, Celo, Unique, Quartz) and I think it could potentially really add traction to the mass adoption of BitcoinExplain me how. What need does these smart contracts satisfy to help on achieving global adoption? None, as far as anyone can tell. Mass adoption is rather not happening due to responsibility issues, misinformation and not really big need for bitcoin.  Sorry to explain this a bit more, the smart contracts / potential bitcoin port are used as the underlying for an iOS/Android social network of DAOs. This app has been designed for mass adoption (it has centralised bits in it so users don't have to understand blockchain tech and DAOs are called #Collectives for adoption. You can read more about the app etc here: https://bitcointalk.org/index.php?topic=5431111.new   Full disclosure I wrote the entire stack including the app, back-end and smart contracts so am probably a little biased   Quote from: n0nce on December 26, 2022, 02:31:57 PMThat's not Turing-completeness, though. Having to unroll loops and break things down to individual mathematical operations, means it's exactly not Turing-complete.https://en.wikipedia.org/wiki/Turing_completenessBitcoin script just doesn't have (and never will have) recursion and no unbounded loops (which you sometimes need). Suggesting you can unroll any loop assumes the input of the program doesn't change the amount of iterations needed. It's highly probable that a smart contract needs to calculate something more or fewer times depending on the user input.It's also simply completely unsuited for writing a smart contract like what we're talking about here. RGB is made for that; also in terms of programming language style and everything around it. It is nonsensical suggesting OP to port it to Bitcoin Script, just because in a thought experiment, it may be possible using 100BTC of transaction fee.Agreed.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "n0nce",
      "created_time": "December 27, 2022, 06:43:29 PM",
      "body": "Quote from: Ashley.Livetree on December 27, 2022, 09:41:57 AMMany thanks for the links @n0nce! I've started learning RGB schema and Taro. From my initial install I see1) It could be too expensive to execute this on chainRGB and Taro solely run off-chain by default.Quote from: Ashley.Livetree on December 27, 2022, 09:41:57 AM3) Both seem far away from any kind of production-readiness (documentation is terrible, sample code is full of issues)That's true; but this just means yours could be the first well-written, working, published RGB smart contract.  Quote from: Ashley.Livetree on December 27, 2022, 09:41:57 AM4) Both solutions appear quite hacky. I mean Bitcoin just isn't designed to do this in my opinion. That's why these protocols are created; to be designed to do this.Quote from: Ashley.Livetree on December 27, 2022, 09:41:57 AMB) Create a completely separate Bitcoin Bridge Layer blockchain-VM (perhaps WASAM based) that sits on top of Bitcoin and has very tight coupling so to perform ONLY very simple pre-existing Bitcoin opcodes (OP_(Math and bools) and within a maximum execution limit to ensure it is always cost free (let's say 21 operations to keep miners happy:). Perhaps this Bitcoin Bridge Layer could then support different VMs and tooling such as EVM or Substrate/Polkadot or whatever else is flavour of next month. Whether the Bridge Layer is true Turing complete or not, perhaps, then just become irrelevant as Bitcoin is and the bridge will discard anything that falls outside of 21. This would have the advantage of opening up Bitcoin to a whole new set of developers and pre-existing dev tools.Any such bridge needs to be off-chain and at least mostly Turing-complete; if it was as 'tightly coupled' as you said, it wouldn't be flexible enough and making it 'looser' will not work on L1 without hard fork. That's why it's on L2... which is exactly what RGB and Taro are doing.Quote from: Ashley.Livetree on December 27, 2022, 09:41:57 AMWhy are you a critic of Lightning Labs incidentally? 2 examples:https://bitcointalk.org/index.php?topic=5386437https://bitcointalk.org/index.php?topic=5387173",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "NotATether",
      "created_time": "December 27, 2022, 06:49:27 PM",
      "body": "Quote from: n0nce on December 27, 2022, 06:43:29 PMQuote from: Ashley.Livetree on December 27, 2022, 09:41:57 AMMany thanks for the links @n0nce! I've started learning RGB schema and Taro. From my initial install I see1) It could be too expensive to execute this on chainRGB and Taro solely run off-chain by default.Side note: has anyone even used the Tao protocol for anything meaningful (not a few-lines student projectvon Github)? Or have they just forgot about it as soon as the fanfare around it died down?",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "n0nce",
      "created_time": "December 27, 2022, 06:51:29 PM",
      "body": "Quote from: NotATether on December 27, 2022, 06:49:27 PMQuote from: n0nce on December 27, 2022, 06:43:29 PMQuote from: Ashley.Livetree on December 27, 2022, 09:41:57 AMMany thanks for the links @n0nce! I've started learning RGB schema and Taro. From my initial install I see1) It could be too expensive to execute this on chainRGB and Taro solely run off-chain by default.Side note: has anyone even used the Tao protocol for anything meaningful (not a few-lines student projectvon Github)? Or have they just forgot about it as soon as the fanfare around it died down?I don't know of any live projects on either 'network', unfortunately. It seems to me though that Taro is less mature than RGB by now; with its very first release on GitHub only happening this September, meanwhile RGB Core releases go back to 2021 and development seems more active, as well. Latest release just 2 days ago.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "NotATether",
      "created_time": "December 27, 2022, 06:53:28 PM",
      "body": "Quote from: n0nce on December 27, 2022, 06:51:29 PMQuote from: NotATether on December 27, 2022, 06:49:27 PMQuote from: n0nce on December 27, 2022, 06:43:29 PMQuote from: Ashley.Livetree on December 27, 2022, 09:41:57 AMMany thanks for the links @n0nce! I've started learning RGB schema and Taro. From my initial install I see1) It could be too expensive to execute this on chainRGB and Taro solely run off-chain by default.Side note: has anyone even used the Tao protocol for anything meaningful (not a few-lines student projectvon Github)? Or have they just forgot about it as soon as the fanfare around it died down?I don't know of any live projects on either 'network', unfortunately. It seems to me though that Taro is less mature than RGB by now; with its very first release on GitHub only happening this September, meanwhile RGB Core releases go back to 2021 and development seems more active, as well. Latest release just 2 days ago.Well it looks like Lightning Labs just dropped the hot potato then (or maybe they are too concerned with using their Lightning Network implementation to mitigate the fallout of FullRBF, to update it with anything useful).",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    }
  ]
}