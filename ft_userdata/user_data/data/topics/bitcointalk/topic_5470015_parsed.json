{
  "id": "topic_5470015",
  "title": "digaran",
  "author": "digaran",
  "created_time": "October 11, 2023, 04:38:40 PM",
  "content": "I know Hal (rip) talked about them here but since I'm not that good with math, I can't find a way to calculate them for other curves, if I'm not mistaken Lambda is derived from n while Beta is derived from p, correct? Is there a formula preferably in python to derive these 2 values for different curves?I'd appreciate the help, I'm just trying to test different curves, using Lambda and Beta as n and p, then if I have a way to calculate the lambda value for secp256k1's Lambda I could use them for my studies.",
  "score": 0,
  "upvotes": 0,
  "downvotes": 0,
  "url": "https://bitcointalk.org/index.php?topic=5470015",
  "comments": [
    {
      "author": "j2002ba2",
      "created_time": "October 11, 2023, 05:54:12 PMLast edit: October 12, 2023, 03:20:57 AM by j2002ba2",
      "body": "lambda and beta are non-trivial cube roots of 1 modulo n and p.λ3 = 1 (mod n)β3 = 1 (mod p)[λ](x,y) = (βx,y)Since there are 3 of each you'd have to match them (2 are non-trivial, so there is just one equality check).You could find how to get such root of 1 here.So, let your curve is modulo q, and has order m, both prime numbers.Compute a primitive root of 1 modulo q:a≠1aq-1 = 1 (mod q)Then the cube root of 1 would be:k = a(q-1)/3 = 11/3 (mod q)Instead of finding a primitive root of 1, one could directly find a cube root of 1, this is faster:k = (-1-sqrt(-3))/2 (mod q)Do the same modulo the order of the curve m:b≠1bm-1 = 1 (mod m)λ = b(m-1)/3 = 11/3 (mod m)Then check which one matches:[λ](x,y) = (kx,y)β = kor[λ](x,y) = (k2x,y)β = k2 (mod q)",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    }
  ]
}