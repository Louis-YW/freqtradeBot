{
  "id": "topic_5461468",
  "title": "cygan",
  "author": "cygan",
  "created_time": "July 30, 2023, 11:26:34 AM",
  "content": "unfortunately i couldn't find a suitable thread for this topic (respectively a thread from ETFbitcoin is unfortunately already locked) and so i open this one to present you 4 slides about the said MAST topic.these illustrate us perhaps better and explain us visually, how this method works in the Bitcoin protocolthis thread is also intended to stimulate further discussion and exchange of information",
  "score": 0,
  "upvotes": 0,
  "downvotes": 0,
  "url": "https://bitcointalk.org/index.php?topic=5461468",
  "comments": [
    {
      "author": "tromp",
      "created_time": "July 30, 2023, 02:08:26 PM",
      "body": "MAST was introduced in BIP 114 [1] as standing for Merkelized Abstract Syntax Treewhile the latter AST is a standard notion in computer science [2].I wonder where your alternative acronym originated...[1] https://github.com/bitcoin/bips/blob/master/bip-0114.mediawiki[2] https://en.wikipedia.org/wiki/Abstract_syntax_tree",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "cygan",
      "created_time": "July 30, 2023, 03:47:08 PM",
      "body": "Quote from: tromp on July 30, 2023, 02:08:26 PM✂️I wonder where your alternative acronym originated...✂️this is correct but since the current version of the proposal no longer implements abstract syntax trees, the name was changed in 2018 and 'abstract' became 'alternative'https://river.com/learn/terms/m/merkelized-alternative-script-tree-masthttps://www.bydfi.com/blog/learn/glossary/merkelized-alternative-script-tree-mast/",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "tromp",
      "created_time": "July 30, 2023, 04:49:00 PM",
      "body": "Quote from: cygan on July 30, 2023, 03:47:08 PMthe current version of the proposal no longer implements abstract syntax treesCan you provide a link to this current version of the protocol?I only found this mailing list message [1] where Anthony Towns states a preference for \"merkelized alternative script tree\".[1] https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-November/016500.html",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "cygan",
      "created_time": "July 31, 2023, 05:57:10 AM",
      "body": "Quote from: tromp on July 30, 2023, 04:49:00 PMQuote from: cygan on July 30, 2023, 03:47:08 PMthe current version of the proposal no longer implements abstract syntax treesCan you provide a link to this current version of the protocol?✂️unfortunately i can't find a clear source about the said renaming or not implementing of abstract syntax trees",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "witcher_sense",
      "created_time": "July 31, 2023, 07:44:51 AM",
      "body": "Quote from: cygan on July 31, 2023, 05:57:10 AMunfortunately i can't find a clear source about the said renaming or not implementing of abstract syntax trees To know more about the history of MAST and its renamings, you should definitely check these transcripts: https://diyhpl.us/wiki/transcripts/london-bitcoin-devs/2020-07-21-socratic-seminar-bip-taproot/Here they (Peter Wulle and others) are talking about the MAST acronym reconsideration:QuoteMF: Some of the interesting stuff that I saw was this tail call stuff. An implicit tail call execution semantics in P2SH and how “a normal script is supposed to finish with just true or false on the stack. Any script that finishes execution with more than a single element on the stack is in violation of the so-called clean-stack rule and is considered non-standard.” I don’t think we have anybody on the call who has any more details on those BIPs, the Friedenbach and Johnson Lau work. There was also Jeremy Rubin’s paper on Merklized Abstract Syntax Trees which again I don’t think Jeremy is here and I don’t think people on the call remember the details.PW: One comment I wanted to make is I think what Russell and I talked about originally with the term MAST isn’t exactly what it is referred to now. Correct me if I’m wrong Russell but I think the name MAST better applies to the Simplicity style where you have an actual abstract syntax tree where every node is a Merklization of its subtree as opposed to BIP 114, 116, BIP-Taproot, which is just a Merkle tree of conditions and the scripts are all at the bottom. Does that distinction make sense? In BIP 340 we don’t use the term MAST except as a reference to the name because what it is doing shouldn’t be called MAST. There is no abstract syntax tree.MF: To clarify all the leaves are at the bottom of the trees, as far down as you need to go.PW: I think the term MAST should refer to the script is the tree. Not you have a bunch of trees in the leaves which is what modern MAST named proposals do.RO: This is a good point. Somebody suggested the alternative reinterpretation of the acronym as Merklized Alternative Script Trees which is maybe a more accurate description of what is going on in Taproot than what is going on in Simplicity where it is actually the script itself that is Merklized rather than the collection of leaves.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "NotATether",
      "created_time": "July 31, 2023, 08:13:10 AM",
      "body": "Quote from: cygan on July 31, 2023, 05:57:10 AMQuote from: tromp on July 30, 2023, 04:49:00 PMQuote from: cygan on July 30, 2023, 03:47:08 PMthe current version of the proposal no longer implements abstract syntax treesCan you provide a link to this current version of the protocol?✂️unfortunately i can't find a clear source about the said renaming or not implementing of abstract syntax trees So what this basically means is, that you can't use merkle roots as scriptPubkeys anymore, and that it's replaced with something else?Although, we have a form of merkle hashing of script conditions inside Taproot scripts. I believe they also use MASTs but not in the way the document originally proposed how MASTs should be.So far, nobody has come up with a good use case for MAST and really Taproot scripts in general.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "NotATether",
      "created_time": "July 31, 2023, 09:47:02 AM",
      "body": "Quote from: ETFbitcoin on July 31, 2023, 08:37:00 AMQuote from: NotATether on July 31, 2023, 08:13:10 AMSo far, nobody has come up with a good use case for MAST and really Taproot scripts in general.That's not true. Why don't you check PTLC (Point time lock contract) for LN?I was thinking in terms of on mainnet, so I guess the LN details slipped from of my mind.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    }
  ]
}