{
  "id": "topic_5535646",
  "title": "Question:",
  "author": "hmbcehch",
  "created_time": "March 18, 2025, 10:40:22 PM",
  "content": "Hello everyone. I’ve been reading forum for a long time, but this is the first time I’m writing an article, because I have something to write about.Everyone probably knows how many different “software” for allegedly searching for forgotten Bitcoin addresses are trying to sell through different channels. Some people believe, some guess to find sources on GitHub, some know at least a little theory.By the way, a little theory, for those who do not know, I will describe it in brief.Bitcoin addresses based on Base58 (this kind of “1PnVcifB9EBwbaAauprqcucPgfUnrRLtWg”) are generated on the basis of a random 256-bit value. Someone will now talk about cid phrases and so on, but no, a cid phrase is essentially a shortened 256 bit number. (those who know the mat part do not swear, all I understand perfectly well, just trying to explain in a simple way). In general, a random 256-bit number turns into a 64-bit number, it turns into a private key, and a public key is created on the basis of the private key by caching.And all these “miracle scripts and programs” are engaged in the fact that they generate a random number, create on the basis of it private and public keys, and in theory, you may be lucky and accidentally generate a wallet that already exists, and even with a balance.It sounds fascinating, but there are more combinations of this number than there are atoms in the universe. Even on some forum found an interesting article, where the man calculated how much energy goes to generate one number, and how much energy is needed to generate all possible combinations. So you need a year’s energy, the sun is a hundred times more powerful than ours. This is just so you understand a little bit of the scale, even when we create a super quantum computer, it still needs to feed millions of suns, so that it has enough energy to create all the combinations.But of course, no one rules out luck. Everything can be. No one talks about the other problem, even the software that will generate a million addresses per minute (there is such a software for sale and free on GitHub) is essentially useless junk, because generation is one thing, but checking for balance is quite another. Even software for 500$, stupidly uses open Api and proxies) At the moment, there is simply no way, even paid, to check millions of addresses in the stream for balance. Why would anyone give such computational operations for free. You can of course deploy your own node, create your own database based on it, put it all on a server, use terrabytes of blockchain data, but something tells me that a person who can afford it will have no interest in looking for forgotten wallets.In general, I described in simple language why you should not rely even on paid software. I myself am a programmer and system administrator, and earlier I knew all this, so I always smiled when I saw in TikTok another advertisement of such a mega product, where people quietly find wallets with a balance of 400 dollars and get high. Although here and divorce is not called, “you realize that purely depends on luck”.But just a month ago, something made me change my opinion about mining these wallets. The thing is that with the development of neural nets, people have noticed that no no, and money from old wallets disappear I checked this information and was convinced of it. So some way still exists, and neural networks can help to find this way. I don’t know how, but this topic fascinated me, and it gave its results.By long and roughly raping Gemini (which is very reluctant to talk about vulnerabilities), after reading a lot of forums and even scientific articles, a curious detail was revealed. Yes, the variants of 256 bits are huge. But here again it all comes down to the human factor. At the dawn of bitcoin development, and especially when it began to boom, there was a huge number of different services and sites for quick creation of wallets. There was the darknet and so on. Different bitcoin mixers, mining farms, you can list endlessly. So, the scripts that allow people to create such wallets were made by hand, and using free libraries like Random for Python and so on. (nowadays advanced libraries are mostly used for generation) So, as it turned out, no, but these libraries were faulty. Either the processor glitched somewhere or something else, and they started generating not just random numbers, but with regularities, what kind of regularities?I can only give an example on a piece of eight bits. Suppose a number “00011000” was generated, then a glitch and “00110000”, “0110000”, “11000000”. That is, the same number could be generated, but let’s say with a shift to the left. Or a 256-bit number could be generated, where the first 200 bits are equal to zero, and the rest randomly. And so on. Thus could be created thousands and hundreds of thousands of wallets, which difference in 256 bit number, could be only one value.And I came up with the idea, why generate a completely random number, if you can try to generate only parts of this number, where the other parts will be fixed. After all, it is much more likely that someone somewhere used this pool because of buggy libraries than pointing a finger in the sky. Thus was born the first version of the program called “Pidor1.0” (this name until something is found).I divided a 256 bit number into cells of 8 bits each, into which you can write your values, you can fix them to remain unchanged, and so on. And what was my when after only 10 minutes of working with the program, I found real addresses that made transactions (unfortunately they had a zero balance). All prufs, and piles of addresses with private keys will be posted at the end of the article, you can safely go into them and see everything with your own eyes. Bye-bye, in total, I found about a thousand wallets for a week of tests (tests, not continuous generation). Unfortunately all of them have zero balances so far, but some of them had decent amounts of money flowing through them, and the last transactions were this year.And then it started, different versions of “Pidora” appeared, here for example I made it possible to fix all 256 bitsBut the real dancing with tambourines began when I realized that it was necessary to somehow check the balance of millions of generated wallets. And to look for naturally free methods. And by means of long nights, I came to the point that I refused to check the balance via the Internet at all. How? By parsing absolutely all addresses, through which at least one transaction was made. In the end came out txt file not much more than 50gb and one and a half billion lines. However, since I left only Bip58 format keys in it, it turned out to be 20gb in weight and 800 million lines.But it is very stressful for the system and time-consuming to get into the txt file every time and check if the bitcoin address generated by us exists in it. Therefore, on the basis of this file had to create a database file based on Sql Lite. Which turned out to weigh almost 60 gb. What about the speed you ask? On Intel(R) Core(TM) Core(TM) i5–8350U CPU @ 1.70GHz generation and instant check — a million per second. I haven’t tested on more serious hardware yet.I think you get the principle, don’t you? Why check the balance, if you can just check whether such a wallet already exists, and whether there were transactions on it.In general, I have given you food for thought. So far, this is just the beginning, but I am already happy that I have done the impossible, because ask any neuron if it is possible to generate an existing address, and see what it will tell you. And here it is not just an address, but hundreds of them.I’m not selling the softwarePublic address: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 keys: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 will now talk about cid phrases and so on, but no, a cid phrase is essentially a shortened 256 bit number. (those who know the math part do not swear, I understand everything perfectly well, I just try to explain in a simple way). In general, a random 256-bit number turns into a 64-bit number, it turns into a private key, and a public key is created on the basis of the private key by caching.",
  "score": 0,
  "upvotes": 0,
  "downvotes": 0,
  "url": "https://bitcointalk.org/index.php?topic=5535646",
  "comments": [
    {
      "author": "NotFuzzyWarm",
      "created_time": "March 18, 2025, 11:55:33 PM",
      "body": "Good story, reads well and yer 1st merit for that.  That said, please edit your post to use the code tag # for those text walls of addresses and keys. The tag makes them much more viewer friendly scrollable windows.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "SilverCryptoBullet",
      "created_time": "March 19, 2025, 02:36:23 AM",
      "body": "Quote from: hmbcehch on March 18, 2025, 10:40:22 PMBitcoin addresses based on Base58 (this kind of “1PnVcifB9EBwbaAauprqcucPgfUnrRLtWg”) are generated on the basis of a random 256-bit value. Someone will now talk about cid phrases and so on, but no, a cid phrase is essentially a shortened 256 bit number. (those who know the mat part do not swear, all I understand perfectly well, just trying to explain in a simple way). In general, a random 256-bit number turns into a 64-bit number, it turns into a private key, and a public key is created on the basis of the private key by caching.Bitcoin procedure from Private key to Public key to Public address is one way. You can not do the opposite like Finding your Public key from a Public address or finding a Private key from a Public key.If you can do it, others can do it, and Bitcoin will be useless but in fact it is valuable, not useless.Keys and addresseshttps://learnmeabitcoin.com/beginners/guide/keys-addresses/https://learnmeabitcoin.com/beginners/guide/private-keys/https://learnmeabitcoin.com/beginners/guide/public-keys/",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "Tfs",
      "created_time": "March 19, 2025, 08:30:48 AM",
      "body": "The private keys you mention are in WIF(u) format. In HEX format 64bits they are in fact the very first few privaye keys like 000000000000000000000000000000000000000000000000000000000000001a It is known that these adresses had been used early on in bitcoin history, some even date from 2017.Now, you also say that you found other private keys corresponding to addresses used this year. This part is interesting: could you olease post a few examples? It could be possible that some early users haven't updated their software and still ise a faulty one.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "MeGold666",
      "created_time": "March 20, 2025, 07:18:32 PMLast edit: March 20, 2025, 07:34:21 PM by MeGold666",
      "body": "Quote from: hmbcehch on March 18, 2025, 10:40:22 PM\"It sounds fascinating, but there are more combinations of this number than there are atoms in the universe.\"It's not true, people keep repeating this nonsense, which was once used as a figure of speech to emphasize how many combinations there are... you don't actually believe it ?  Quote from: hmbcehch on March 18, 2025, 10:40:22 PMBy parsing absolutely all addresses, through which at least one transaction was made. In the end came out txt file not much more than 50gb and one and a half billion lines. However, since I left only Bip58 format keys in it, it turned out to be 20gbOh, I made a \"lottery machine\" like this a long time ago just for fun. But instead of using a huge, nonsensical database of addresses that barely have any money, I collected only addresses that currently hold more than X Bitcoins (I don't remember - maybe 10 BTC or 100 BTC...).You can run it 24/7 to test your luck - you would need to be the luckiest person on Earth to actually find the key to any of these addresses.  This is another reason why an encrypted blockchain like Monero is more secure than a transparent one like Bitcoin - you can't generate such a list. Instead, you would need to sync every generated address from block 0 to the current height.Anyway, this is futile and worthless - just a funny experiment to realize how pointless it is.Quote from: hmbcehch on March 18, 2025, 10:40:22 PMI’m not selling the softwareYou seriously think this junk is worth something ? not a broken dime...",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "Kryss191",
      "created_time": "March 20, 2025, 08:25:45 PM",
      "body": "It's fascinating to see someone dive deep into the math behind Bitcoin addresses and uncover how past software bugs might have left predictable traces. Even if none of the wallets have a balance right now, the fact that you can generate and check so many addresses so quickly is mind-blowing.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "Stalker22",
      "created_time": "March 20, 2025, 08:32:32 PM",
      "body": "Quote from: MeGold666 on March 20, 2025, 07:18:32 PMQuote from: hmbcehch on March 18, 2025, 10:40:22 PM\"It sounds fascinating, but there are more combinations of this number than there are atoms in the universe.\"It's not true, people keep repeating this nonsense, which was once used as a figure of speech to emphasize how many combinations there are... you don't actually believe it ?  Why do you think this is not true? According to online sources, scientists estimate that there are only 1080 atoms in the observable universe.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "odolvlobo",
      "created_time": "March 20, 2025, 10:23:53 PMLast edit: March 20, 2025, 10:37:51 PM by odolvlobo",
      "body": "Would it be possible to describe what you are trying to do more clearly? The description is very unclear to me. Either way, I suspect that your proposals, whatever they may be, are not feasible in theory or in practice. The success that you posted is not significant because the address range you are looking at is 0x0000000000000000000000000000000000000000000000000000000000000001 - 0x00000000000000000000000000000000000000000000000000000000000000FF, and not only is the range small and easy to search but that particular range has been used by many people for many reasons.Can you repeat your success on addresses whose private keys are in the range 0x0E3CB02B8700B53306607EB5AAEBAB2700000000000000000000000000000000 - 0x0E3CB02B8700B53306607EB5AAEBAB27FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF? Or alternatively, find the private key of this uncompressed address 1A454efhFVx7dUCJh3Y2FDavA3WPGERdHC, which lies in that range?",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "MeGold666",
      "created_time": "March 21, 2025, 09:15:11 AMLast edit: March 21, 2025, 09:32:00 AM by MeGold666",
      "body": "Quote from: Stalker22 on March 20, 2025, 08:32:32 PMQuote from: MeGold666 on March 20, 2025, 07:18:32 PMQuote from: hmbcehch on March 18, 2025, 10:40:22 PM\"It sounds fascinating, but there are more combinations of this number than there are atoms in the universe.\"It's not true, people keep repeating this nonsense, which was once used as a figure of speech to emphasize how many combinations there are... you don't actually believe it ?  Why do you think this is not true? According to online sources, scientists estimate that there are only 1080 atoms in the observable universe.Estimated number of atoms in the observable universe: ~10^80  Total possible Bitcoin addresses: 2^160 ≈ 1.46 × 10^48  Now, dividing the number of Bitcoin addresses by the number of atoms in the universe:(1.46 × 10^48) / (10^80) = 1.46 × 10^-32  This means the number of Bitcoin addresses is about 10^-32 times smaller than the number of atoms in the universe. In other words, there are vastly more atoms than Bitcoin addresses.\"Online sources\" also say that the Earth is flat.  1. Bitcoin Addresses (160-bit)   - Total possible Bitcoin addresses:       2^160 ≈ 1.46 × 10^48     - Estimated number of atoms in the universe:       ~10^80     - Since 10^80 is much larger than 10^48, there are far more atoms than Bitcoin addresses.  2. Bitcoin Private Keys (256-bit)   - Total possible private keys:       2^256 ≈ 1.16 × 10^77     - This is close to the number of atoms but still smaller.     - Some people round this up and mistakenly claim \"there are more Bitcoin private keys than atoms in the universe.\"This bullshit spreads online because it sounds impressive.  Stop believing \"sources\" and check everything yourself, because there is a lot of bullshit - especially in the cryptocurrency space - and it takes about five minutes to realize it's total nonsense.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "stwenhao",
      "created_time": "March 21, 2025, 10:48:31 AM",
      "body": "QuoteThis is another reason why an encrypted blockchain like Monero is more secure than a transparent one like Bitcoin - you can't generate such a list.Of course you can. You have to know, how many addresses are in use, and how many coins are in circulation. Which means, that it is possible to make a list of all UTXOs, even if they are encrypted.Obviously, you wouldn't have a direct mapping, like \"this address X has this balance Y\", but still: when you have any Monero transaction, which takes some inputs, and produces some outputs, then you know, that things are cryptographically connected between stealth address A, and stealth address B. As long as things are produced with true randomness, this is unreadable for the outside observer. But: if you have a similar problem with your random number generator, then it can produce some patterns, no matter if you use Bitcoin, Monero, or anything else.Because if you have your \"view key\" generated randomly, then yes, nobody can read it. But if you have faulty number generator for your \"view key\", then guess what: it can be recovered.To put it more simply: Monero can hide things properly, but the way of hiding them, depends strictly on provided randomness.And I guess you will find patterns like \"view_key=1\" or \"spend_key=1\" even in Monero, for example when developers tried to test things, or when some people tried to use low numbers to see, if they can deanonymize some traffic in that way. Also, the same is true for coin amounts. Even if it is hidden, you can assume, that someone used a round number, and if some key is weak, then you can target that particular key.QuoteTotal possible Bitcoin addresses: 2^160It is not that simple, because there are different address types:1. Uncompressed P2PK: around 2^256 addresses (and up to around 2^520 addresses, if you count unspendable).2. Compressed P2PK: around 2^256 addresses.3. P2PKH: around 2^160 (but again: compressed vs uncompressed, and some unspendable).4. P2SH: around 2^160 (a Script can be also keyless or contain multisigs, timelocks, and many different things).5. P2WPKH: around 2^160 (but uncompressed ones are non-standard).6. P2WSH: around 2^256 (similar to P2SH, it can contain many things).7. P2TR: around 2^256 (but spendable by key, or by TapScript).8. Raw scripts: they are non-standard, but you can get up to 2^80000 possible combinations (a lot of unspendable ones, and a lot of them will be spendable by anyone).And also, even if you assume, that the whole keyspace is just around 2^256 keys, then you forget about multisig, and then, you have to know more than a single private key, to move a given coin. Not to mention that putting keys in a multisig in a different order, will also give you a new address.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "MeGold666",
      "created_time": "March 21, 2025, 06:04:44 PM",
      "body": "Quote from: stwenhao on March 21, 2025, 10:48:31 AM...IF there was a flaw in randomness in Monero... but there isn't and it is not possible to create a list of all UTXOs, even if you are able to identify a UTXO in the blockchain, you wouldn't know which specific address it belongs to, because it's associated with a stealth address that’s not publicly visible and ring signatures makes it practically impossible to identify which specific UTXO is being spent, as the input is obfuscated within a \"ring\" of possible inputs.Such an attack is simply impossible on Monero, and practically on Bitcoin as well (talking about brute force).But because of this, Monero is much more secure.As for the different address types in Bitcoin, it will never be greater than the atoms in the universe... it's pure nonsense.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    }
  ]
}