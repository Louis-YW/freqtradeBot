{
  "id": "topic_5459020",
  "title": "GR Sasa",
  "author": "GR Sasa",
  "created_time": "July 07, 2023, 10:37:24 PM",
  "content": "Hi,We all (hopefully) have heard about the current ongoing-puzzle that was recently increased its prize by 10x and which is still not all solved for long time.Since I'm very interesting in math and dealing with big numbers, I would love to get to learn about dividing public keys. I will mainly focus for the next possible puzzle (#125) which has its public key revealed.Puzzle #125: Code:0233709eb11e0d4439a729f21c2c443dedb727528229713f0065721ba8fa46f00e Since public key for puzzle #125 is revealed, we can do many things with it so we can try to slightly reduce the targeted range by XXX amount.I already know Addition, Subtraction, and striding public keys, but weirdly i haven't managed to know how to divide public keys in the correct way.Can you help me give me an detailed example of dividing public key into lower ranges, and if possible which tools is needed for the process?What could be the advantages and disadvantages of dividing public keys? Is it a problem if the divided public key has a decimal in it? I think if i understood correctly, the newly divided keys could be invalid and could lead to infinity if its wrongly divided (Correct me, if I'm wrong).Thanks to all, and Goodluck hunting!",
  "score": 0,
  "upvotes": 0,
  "downvotes": 0,
  "url": "https://bitcointalk.org/index.php?topic=5459020",
  "comments": [
    {
      "author": "digaran",
      "created_time": "July 08, 2023, 01:16:01 AM",
      "body": "Multiply your public key by this key7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0Key above is N/2, or 0.5 and if you for example multiply 4 by 0.5 you'd get 2, this is a simple operation.There is also a java calculator on github, https://github.com/MrMaxweII/Secp256k1-CalculatorYou can put public key and select division then put 2 and divide or any other number you like.About dividing you should know, every single even public key has an odd pair we call it inverse key, aka 02 and 03.If the pub key starts with 02 and it's private key ends with 1, 3, 5, 7, 9 the inverse key must end with 2, 4, 6, 8, 0.Now let us practice :Our target pub key :03f42cde25a364c9764a4c60f762337c0a1a9d27805c89b59bc845e18a93db4ac9It's private key : 00000000000000000000000000000000000000002880422a1ab3e513482869b2Â Decimal ( 12534455350639729112533985714 ) ends with 4 so it is even.Inverse pub key :02f42cde25a364c9764a4c60f762337c0a1a9d27805c89b59bc845e18a93db4ac9It's private key :fffffffffffffffffffffffffffffffebaaedce686c85e11a51e7979880dd78fDecimal (Â  115792089237316195423570985008687907852837564279062369927254523412405627508623Â  ) ends with 3 so it is odd.Now it doesn't matter which one of the pub keys you are dividing, it will divide the even one because there is no fraction in ECC.If we divide our target pub by 2 we will see :0312d8734901f0f88e3b396c4fa66454543cd8837bbb31ea177cc19b99a8a79ed1Private key :0000000000000000000000000000000000000000144021150d59f289a41434d9Decimal (Â  6267227675319864556266992857Â  )Inverse pub :0212d8734901f0f88e3b396c4fa66454543cd8837bbb31ea177cc19b99a8a79ed1Private key : fffffffffffffffffffffffffffffffebaaedce69b087f26b2786c032c220c68Decimal (Â  115792089237316195423570985008687907852837564279068637154929843276961894501480Â  )Then if you try to divide this0312d8734901f0f88e3b396c4fa66454543cd8837bbb31ea177cc19b99a8a79ed1 Or the -n aka 02 version of it, doesn't matter which one since both will give you the same result which is :0222db101c46b9d0f52e30f1be2565c67a9e75d3104fda0b75fcbec3fae320b88dPrivate key :7fffffffffffffffffffffffffffffff5d576e734d843f93593c360196110634Decimal (Â  57896044618658097711785492504343953926418782139534318577464921638480947250740Â  )Inverse key : 0322db101c46b9d0f52e30f1be2565c67a9e75d3104fda0b75fcbec3fae320b88dPrivate key :7fffffffffffffffffffffffffffffff5d576e7361c460a86696288b3a253b0dDecimal (Â  57896044618658097711785492504343953926418782139540585805140241503037214243597Â  )So, tell me, are we close to our target or did we just distanced ourselves from target by 2^255 difference? If you had more questions, happy to answer if I know the answer.ðŸ˜‰",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "GR Sasa",
      "created_time": "July 08, 2023, 09:31:40 AM",
      "body": "Thanks for your answer,Why do you divide by 2 though? Why not like 1000 or any larger number? (for more reducing). Seems dividing is just as complicated as bruteforcing a whole key. It can reduce range, but it can mess it up also. And what if a PubKey is a prime? Lol then, there is no way to divide it, correct?",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "vjudeu",
      "created_time": "July 08, 2023, 01:15:32 PM",
      "body": "QuoteWhy do you divide by 2 though?You can multiply or divide by any number, it doesn't matter.QuoteWhy not like 1000 or any larger number? (for more reducing).You won't reduce anything by using division. You are in a finite field, so you can always divide your key by any number, and you will always reach a valid result. If you have 1234 as your key, and divide it by 1000, you will get \"1.234\" key, so you will end up in fractions, just they will be expressed as large, 256-bit numbers.QuoteAnd what if a PubKey is a prime?It doesn't matter. You can divide a key equal to 31337 by 127, and then you will just get a fraction 31337/127, expressed as some 256-bit number.QuoteLol then, there is no way to divide it, correct?For each and every key, you can multiply or divide it by any other key, in the whole range from 1 to N-1, and you will always get some valid key as a result.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "GR Sasa",
      "created_time": "July 08, 2023, 01:21:15 PM",
      "body": "Wouldn't it possible to reduce 120 bits to 100 bits?For the targeted public key below: 0233709eb11e0d4439a729f21c2c443dedb727528229713f0065721ba8fa46f00e",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "garlonicon",
      "created_time": "July 08, 2023, 04:00:38 PM",
      "body": "QuoteWouldn't it possible to reduce 120 bits to 100 bits?You can generate 2^20 keys, based on some 120-bit key, and then one of them will have only 100 bits. But you won't know which one, and you will have to check all of them, so it won't solve anything.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "GR Sasa",
      "created_time": "July 09, 2023, 11:54:08 AM",
      "body": "Thanks for answer everyone,After doing researches, I found a decent ecctools that does public key math made and developed by Albertohttps://github.com/albertobsd/ecctoolsHowever, it's made for ubuntu, and i have Windows operating system. Can anyone help me compile the tools for windows?I'll be gratefulThanks",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "NotATether",
      "created_time": "July 10, 2023, 06:05:08 AM",
      "body": "Quote from: GR Sasa on July 09, 2023, 11:54:08 AMThanks for answer everyone,After doing researches, I found a decent ecctools that does public key math made and developed by Albertohttps://github.com/albertobsd/ecctoolsHowever, it's made for ubuntu, and i have Windows operating system. Can anyone help me compile the tools for windows?I'll be gratefulThanksUse MinGW software to create a Unix build environment in Windows, and run it from there. It doesn't have any external dependencies.Quote from: GR Sasa on July 08, 2023, 09:31:40 AMThanks for your answer,Why do you divide by 2 though? Why not like 1000 or any larger number? (for more reducing). Seems dividing is just as complicated as bruteforcing a whole key. It can reduce range, but it can mess it up also.It's like having a spectrum of a numerical range that extremes from 0 to your maximum value 2^N.0 |----------------| 2^NDivision cuts that spectrum into two lengths, so that there are 2^(N-M) keys remaining on the left, and then on the right there are 2^M possible remainders there may be that should be tried for each of the keys on the left.Â Â  Â  Â  Â  Â  Â  Â  2^(M-N)0 |-----------|----| 2^NSince reminders have to be tried for all remaining keys, the total search space is these two values multiplied together: 2^M * 2^(N-M) = 2^(M+N-M) = 2^N. Exactly the same range as before.So no, key division does not decrease search time.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "digaran",
      "created_time": "July 10, 2023, 07:16:29 AM",
      "body": "Quote from: NotATether on July 10, 2023, 06:05:08 AMSo no, key division does not decrease search time.Isn't kangaroo doing division to decrease the search time? As long as you are dividing +n key, you can even reach G itself.Quote from: GR Sasa on July 08, 2023, 09:31:40 AMThanks for your answer,Why do you divide by 2 though? Why not like 1000 or any larger number? (for more reducing). Seems dividing is just as complicated as bruteforcing a whole key. It can reduce range, but it can mess it up also. And what if a PubKey is a prime? Lol then, there is no way to divide it, correct?Since you don't know anything about the private key, the easiest way is to guess the last digit and if it's even, at least you can divide by 2 for sure.And if you are dealing with prime numbers, look at N of secp256k1, if you just subtract 1 from it you can divide it by dozens of already known divisor numbers.Anyways for now the puzzle #125 has been solved, it'sÂ  time to focus on the next one #130, we'd either find it or die trying, right? ðŸ¤£",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "GR Sasa",
      "created_time": "July 10, 2023, 07:39:06 AM",
      "body": "Quote from: NotATether on July 10, 2023, 06:05:08 AMQuote from: digaran on July 10, 2023, 07:16:29 AMSo no, key division does not decrease search time.And if you are dealing with prime numbers, look at N of secp256k1, if you just subtract 1 from it you can divide it by dozens of already known divisor numbers.Hmm, i dont know if i agree with this statement. When you create 1 million key with the help of subtracting the public key, You have like created a million clones of the targeted public key, and with that, you increase the chance. When you find 1 of the 1 million pubkey, you get back to the original key. So the chances is higher. And so is very similar to dividing.@digaran, you are fucking smart with coming up with this idea, but it still wont help us a lot finding the targeted priviate key.Teach me more tips like that though!",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "digaran",
      "created_time": "July 10, 2023, 10:34:01 AM",
      "body": "Quote from: GR Sasa on July 10, 2023, 07:39:06 AMQuote from: NotATether on July 10, 2023, 06:05:08 AMSo no, key division does not decrease search time.Hmm, i dont know if i agree with this statement. When you create 1 million key with the help of subtracting the public key, You have like created a million clones of the targeted public key, and with that, you increase the chance. When you find 1 of the 1 million pubkey, you get back to the original key. So the chances is higher. And so is very similar to dividing.Quote from: digaran on July 10, 2023, 07:16:29 AMAnd if you are dealing with prime numbers, look at N of secp256k1, if you just subtract 1 from it you can divide it by dozens of already known divisor numbers.@digaran, you are fucking smart with coming up with this idea, but it still wont help us a lot finding the targeted priviate key.Teach me more tips like that though! Â  Took me 4 mins to correct the quotes you misplaced lol.I'm the last person you'd want to teach you something, I just share what I know, they might be incorrect sometimes.What you need to know about public keys, ignore their size and char length, it's all smoke and mirrors, they are simply representations of private keys, and private keys are simply ordinary numbers but very big ones.Hexadecimal keys can make our work easier, for instance, if you have a large number like 3637343230303931363537383831353435 By the time you can figure out how to extract a certain number out of that, you'd be spending a few minutes, but if you convert to hexÂ  you will get thisb355b9d94ef43E58a7f80fe3b85bAnd in seconds I can select my target and then by guess work I'd take b as my first char assuming we know the first char is b, so I'd go with b000000000000E00000000000000Â  then I subtract from target to get355b9d94ef43058a7f80fe3b85bThen I go with thisbffffffffffffeffffffffffffffÂ  subtracting target from it to reachcaa4626b10bc0a75807f01c47a4Â  and then I add the last result to thisÂ  +Â  355b9d94ef43058a7f80fe3b85b to reach =ffffffffffff0ffffffffffffffAnd just like that I now know the E I guessed is really there otherwise I'd see something else instead of 0 in the middle of fsÂ  =Â  ffffffffffff0ffffffffffffff . ðŸ˜‰Fun fact, 99% of times when I share something I know with others, I learn something new then and later on, this is why we need to share our knowledge, we gain more than we already have by sharing.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "GR Sasa",
      "created_time": "July 10, 2023, 11:10:44 AM",
      "body": "@digaran i didn't understand anything you wrote here, but could you please help me at least compile the ecctools that Alberto wrote? I will be greatfulI want to do some mathematics, maybe i can get near to #130",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "digaran",
      "created_time": "July 10, 2023, 11:50:44 AM",
      "body": "Quote from: GR Sasa on July 10, 2023, 11:10:44 AM@digaran i didn't understand anything you wrote here, but could you please help me at least compile the ecctools that Alberto wrote? I will be greatfulI want to do some mathematics, maybe i can get near to #130I guess I was speaking arabic right? ðŸ˜… that is math right there, follow up on it to get some where.About compiling, I'm the worst person to ask, because I have the same problem as you, when I for example open visual studioÂ  it's like an alien world to me. In case you didn't know, I used WP's ready to use for windows tools.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "GR Sasa",
      "created_time": "July 10, 2023, 12:37:23 PM",
      "body": "Quote from: digaran on July 10, 2023, 11:50:44 AMQuote from: GR Sasa on July 10, 2023, 11:10:44 AMI guess I was speaking arabic right? ðŸ˜… that is math right there, follow up on it to get some where.About compiling, I'm the worst person to ask, because I have the same problem as you, when I for example open visual studioÂ  it's like an alien world to me. In case you didn't know, I used WP's ready to use for windows tools. Nono, you werent speaking arabic. You just explain a lot of good things but the way you explain them, nobody but einstein could understand it.Your examples are good, but as i said the way you explain things are catastrophic.Thank you for nothing. We probably need help of Wandering around the jungle, i think he is the only and other few who can compile codes. I asked him but unfortunately he ignored me",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "ripemdhash",
      "created_time": "July 10, 2023, 12:47:45 PM",
      "body": "I have thought about this topic.We ( I hope) we no need check all subranges.here my experiment. at the moment without explanation. ok?Â  will do later.but for setup :- target pubkey- control pubkeyCode:private1 10101010101010private2 201010501010100 81054462466121336796499689506081535496986294995352433067823614199163723147046 810544624661213367964996895060815354969862949953524330678236141992637235470460 diferential 100000400000 1000004000001 19883490071054296183845522678259539732305440330750236106103916903191007631361 175442559450479083975107553043466527049753885271325612700916913852815502274351 diferential -2339234126006387786334767373912887027330051803617674836012225517909457403926 1134528551113098076372362176347750208255075124754572295465929376236087040904112 73256219721567388941442868066720921294652336584720857874709388926369663497448 921610506174557473779442533742618042094013266711004341004408441332501800679522 diferential 18904830895888358436501385307540882914748990086379576225731455206880516570504 189048308958883584365013853075408829147489900863795762257314552068805165705043 5968664393676092547606751804571541641898843519539943524876554801213317706935 155185274235578406237775546918860082689369931508038531646790424830911046343033 diferential 9549863029881748076170802887314466627038149631263909639802487681877786927368 95498630298817480761708028873144666270381496312639096398024876818777869273684 16886346347108611832604101980433653228538811457365090222463252958243284073143 940810725053194087816514253195589251304305209767483598108666950526928921527014 diferential 77194726158210796949047323339125271901891709519383269588403442094449608079558 771947261582107969490473233391252719018917095193832695884034420944496080795585 30471602430872683006202890791759975750746727441861816942790832405769000499573 975091277787925856198492505336319224023895278139578142169306636983321470489265 diferential 67037525347919902613646359741871946651642800372095997274139831292563146549353 670375253479199026136463597418719466516428003720959972741398312925631465493536 2463661473134387136671723085291232081975267325086700093246918364820609926486 147819688388063228200303385117473924918516039505202005594815101884927551918416 diferential 12318307365671935683358615426456160409876336625433500466234591823672145265355 123183073656719356833586154264561604098763366254335004662345918236721452653557 32371981937314205172181135593826726926599749153289758214491766039672830203804 672341163313448876652992816179478174629379405491402670608675140823879760300567 diferential 34862134394030682493118146024121090536338191395850508846375748042715145826252 348621343940306824931181460241210905363381913958505088463757480427151458262528 72999360606134123201816490548955420168093247045503744067294559371936460617093 75516579937380127450154990223057331208372324529831459379959889007522828159468 diferential -65447702612396110456800991526649687047256014592520598129298570471184177801147 503443866249200849667699934820382208055815496865543062533065926703339836931909 78891313546303341936938473302622530625010208629699385403533188074551945304944 101795243285552699273468997809835523387109946618966948907784758807939158467669 diferential -68711789217748072009591573521638978286299213967802690512754712193758029458178 4708030001956812341397941148704892956653835031127221386985045094776013203615910 102926301544281062598729764452167029202522279359177692784537922792572821440533 7719472615821079694904732333912527190189170951938326958840344209456878599734710 diferential -25731575386070265649682441113041757300630569839794423196134480698004035443186 9006051385124592977388854389564615055220699443928048118647068244351412605115111 71556909079240345486476451409863313841641191408417075742059370480826965081905 7155690907924034548647645140986331384164119140841707574205937048093932508190511 diferential 112360000000 11236000000012 7894915175271558778879839886955993717238924837209652571541261123400113398489 9210734371150151908693146534781992670112078976744594666798137977189059493982512 diferential 84212428536229960308051625460863932983881864930236294096440118648490481541336 8421242853622996030805162546086393298388186493023629409644011864849048154133613 102482653692797092501321446501942171318028648844698478591501121401229878680057 399283066335573087667486155202372096044267463031292773733121252235236246648313 diferential -98489823029441361624646584949918450357585974214385550854169908878877516213574 1730226620787483379892440005876945749525159006468935352843525426264064528076314 105020732098961200500448102682298335029317790857765610951665147965680437286736 8617085710683995938498305861111658258815818737047434744752012140787515564812314 diferential -18849874992121241115465044071181752441159603487291263504145026557805281638613 9694221424519495430810594093750615541167796079178364087846013658371287985572415 81735592402811432063697165888485582013767692432288167799485997511778714114838 10216949050351429007962145736060697751720961554036020974935749688981133131972115 diferential 20433898100702858015924291472121395503441923108072041949871499378032617204883 2043389810070285801592429147212139550344192310807204194987149937803261720488316 85465589675161953765016679411174408177094392682174334187160953747431274080356 10752122572036503860760162893663877157763488111628383978384765148879187674594416 diferential 22055636045203084842584949525464363400540488434109505596686697741360602665588 2205563604520308484258494952546436340054048843410950559668669774136060266558817 73939526862382630812641713318800712243378203696276746172024983692898356256637 2232136659996456779249561156793983765837832564415901771230942903957098354229417 diferential -51618160262418063020146101750860874584999878052117728459715554653327372714343 6417392897489813240342488325782703326783768622695717592288960848819078877999418 98846905446489435117682548178148214020714993896771259838809285608736247740300 5930814326789366107060952890688892841242899633806275590328557136541297357150218 diferential -39538762178595774047073019271259285608285997558708503935523714243323274168798 7625332705872042137649796573742862224455156672036640044708144889819488732553919 88630981885353137237795074944921608479949740559291902120018766849187987935184 857719179535675521656081370434725243354352327993147439871149356628654344527219 diferential -80053790089996382021234261240574356046406217279360427721307273282901444489912 3573829914731981340233672376811355180643134699971447666129788985861671700442520 43422033463993573283839119378257965444814086604653089143476936178195573186639 4342203346399357328383911937825796544481408660465308914347693617832057368663920 diferential 125000500000 12500050000021 17588671782883472722567744558281707521950009763910112058117239970991379089026 9527197215728547724724194969069258241056255288784644031480171650909850059788521 diferential 77683300374402004524674205132410874888612543123936328256684476538107121508859 7768330037440200452467420513241087488861254312393632825668447653810712150885922 92039865804020565593094885519726285729178576734649282970788719420310602855768 8907083787485861186428537308360608296372120329159608029431166395527167615078522 diferential -2969027929161953728809512436120202765457373443053202676477055465038926704983 11282306130815424169476147257256770508738019083602170170612810767647923478935423 9022760200310352890148388442235421391130199813953888653190012712457272455416 2255690050077588222537097110558855347782549953488472163297503178107627886384523 diferential 13534140300465529335222582663353132086695299720930832979785019068619006408429 1353414030046552933522258266335313208669529972093083297978501906861900640842924 9141480729261804901860867237527992725224018232558545082837249721831710250882 6399036510483263431302607066269594907656812762790981557986074805215610306398924 diferential 54848884375570829411165203425167956351344109395351270497023498330324392813107 5484888437557082941116520342516795635134410939535127049702349833032439281310725 30877890463284318779618929335650108760756683807753307835361376837872856533170 6947525354238971725414259100521274471170253856744494262956309788517891089794925 diferential 38597363079105398474523661669562635950945854759691634794201721047306054364779 3859736307910539847452366166956263595094585475969163479420172104730605436477926 87626445909320364104323988655223281618363562157137765478728231566690784510593 6259031850665740293165999189658805829883111582652697534194873683352469607938526 diferential -25036127402662961172663996758635223319532446330610790136779494733166088431208 9075596183465323425090698825005268453330511794846411424582566840835207306312927 19034316039010881439491120823345957455260969470532860994400848735730396548398 10944731722431256827707394473423925536775057445556395071780488022992950949603127 diferential 90413001185301686837582823910893297912489604985031089723404031494199112947633 9041300118530168683758282391089329791248960498503108972340403149419911294763328 99709854621022279392519459313036809539943458129203389885021112705336486427082 964934076977634961863091541739065898773646368992290869855043026207236137593128 diferential -90060513851245929773888543895646150552206994439280481186470682443264125051151 2573157538607026564968244111304175730063056983979442319613448069825403644318629 112530340244715739214456309374640361152757632890931949329574031785561326101553 7502022682981049280963753958309357410183842192728796621971602119056248561747229 diferential -37510113414905246404818769791546787050919210963643983109858010594998840484081 7828197582241094901875221521714112080191835331543092127274715254651932101025630 33083454067804627263877424288196545100810732651164258395030046612006631999825 8270863516951156815969356072049136275202683162791064598757511652994298749739830 diferential 49625181101706940895816136432294817651216098976746387592545069917936355497573 4962518110170694089581613643229481765121609897674638759254506991793635549757331 58735117729073432461231659062377924273178474634313357295524358115409226991345 1006887732498401699335399869640764416111630993731086125066131853433637708792831 diferential -48666240404089415467877660365970280112062164697002496044863039581072849903417 6712584883322677995569332464271762774077539958207240833774212356044531159092032 44273445884856192367835964856263023590790833400822757558054915318964311896379 9876384082006381374363407544858674493330262835568153609104558032688462377606732 diferential 54490394935207621375798110592323721342511794954858778532990665007920311879688 5449039493520762137579811059232372134251179495485877853299066500792031187968833 67401365376945248082377140527445200093442761296774944342113453172079243408659 2419536193018547367059692224062135387969740149114998002024585498509485538838433 diferential -43206003446759774411780218286823846213745359805624964321867598186984388020275 7258608579055642101179076672186406163909220447344994006073756495453377347406234 87721279725239541987553776521733263524876942635662806350458456925545592194210 8421242853622996030805162546086393298388186493023629409644011864868140608832134 diferential -3508851189009581679502151060869330540995077705426512254018338276864186105889 11228323804830661374406883394781857731184248657364839212858682486465397538844835 17814167574971722372857074616721216592744240658319216058862332791158194231452 10688500544983033423714244770032729955646544394991529635317399674632601138094235 diferential 89070837874858611864285373083606082963721203291596080294311663955167817149490 8907083787485861186428537308360608296372120329159608029431166395516781714949036 83225564139321015460691645474994433769226999325585087524997461008124006856883 8322556413932101546069164547499443376922699932558508752499746100828025748188336 diferential 156250625000 15625062500037 113954119566882605020022239214899210902792523576232445582881271663241698773808 2756954505650385605323118690683045425067561054263688199585837217687100750025537 diferential -86384574510378748966791052308068756652116913033595563587022899486370691273553 2940751472693744645677993270061915120072065124547934079558226365514747022078438 48557972905971307758271703390740090389899623729934637321737649059509245305706 10085117449701733149794892242692172619440691082371040059130127112358196404508438 diferential 52293201591046023739677219036181635804507287093775763269563622064072718739378 5229320159104602373967721903618163580450728709377576326956362206407271873937839 75929238844141767490866219677828136296942665101032724185314861076570942129090 8731862467076303261449615262950235674148406486618763281311209023819567998099239 diferential 11389385826621265123629932951674220444541399765154908627797229161624737851902 1138938582662126512362993295167422044454139976515490862779722916162473785190240 96493407697763496186309154173906589877364636899229086985504302618100151413631 5789604461865809771178549250434395392641878213953745219130258157109409824885240 diferential -38597363079105398474523661669562635950945854759691634794201721047006053164779 7719472615821079694904732333912527190189170951938326958840344209451210832955841 102054044751532918000435444414436800141483954957828729286363872599475345895026 7850311134733301384648880339572061549344919612140671483566451738442080525211041 diferential -23550933404199904153946641018716184648034758836422014450699355215054540642916 9224115583311629126962434398997172320480280544265288993190580792646362085142142 95827935920537541040196677248569303050624191127510265695949100531085737272917 6388529061369169402679778483237953536708279408500684379729940035428762444689342 diferential -31942645306845847013398892416189767683541397042503421898649700176798112826024 8384944393047034841017209259249814016929616723657148248395546296472004866831343 89383367130559870151528479655829262202190400496127996365519775056787721330734 8532048680644351241736809421692793210209083683721308743981433073620813741865243 diferential -4062880324116357734160385438901330100099563658914908925705444320579583912082 11172920891319983768941059956978657775273800062015999545689971882093857758225544 12406295275426735223954034108073704412804024744186596898136267479628749626197 4548974934323136248783145839627024951361475739535085529316631409166965362457944 diferential 33083454067804627263877424288196545100810732651164258395030046612040903998382 3308345406780462726387742428819654510081073265116425839503004661204090399838245 105265535670287450385064531826079916229852331162795367620550148310654710633052 3157966070108623511551935954782397486895569934883861028616504449350679040938345 diferential -73685874969201215269545172278255941360896631813956757334385103817147920223669 4210621426811498015402581273043196649194093246511814704822005932437024127066846 17154383590713510433121627408694504867087046559862948797422987132263820408439 1286578769303513282484122055652087865031528491989721159806724034942981516790846 diferential -4288595897678377608280406852173626216771761639965737199355746782834005240531 11150349333963781781529057815651428163606580263910916718324941635868415625380647 48064640815489741496576635286625169297404271964899016913534218662707557792008 4806464081548974149657663528662516929740427196489901691353421866289623779200847 diferential 188680000000 18868000000048 22267709468714652966071343270901520740930300822899020073577915988947742789315 7571021219362982008464256712106517051916302279785666825016491436214843347900948 diferential 53442502724915167118571223850163649778232721974957648176586998373200690689694 5344250272491516711857122385016364977823272197495764817658699837320069068969449 59031261179808256490447953141684031454387777867763676744073220425285749195172 5449039493520762137579811059232372134251179495485877853299066500816739070519849 diferential -4540866244600635114649842549360310111875982912904898211082555417118358489974 11125122299271556030892114245932759774096158136617000617152260772439980300436350 46316835694926478169428394003475163141135025711629961753042065256809284799755 4631683569492647816942839400347516314113502571162996175304206525700928559975550 diferential 200000800000 20000080000051 30720350205818582459314751124753934736467108890366811366813614711221165500559 6853001199759529933231752173983570056596508906312596381827652512498219864156751 diferential 37809661791776716873002770615081765829497980172759152451462910413761033141008 3780966179177671687300277061508176582949798017275915245146291041376103314100852 33772692694217223665208203960867306457077622914730180444926505916486568146286 7237005577332262213973186563042994240802347767442181523912822696386762281106552 diferential 38597363079105398474523661669562635950945854759691634794201721047381054664779 3859736307910539847452366166956263595094585475969163479420172104738105466477953 4927322946268774273343446170582464163950534650173400186493836729641219852972 2956393767761264564006067702349478498370320790104040111896302037698551038368253 diferential 24636614731343871366717230852912320819752673250867000932469183647344290530710 2463661473134387136671723085291232081975267325086700093246918364734429053071054 30206631974952050980061996089222932483348929811932583751983955602354759739849 1510331598747602549003099804461146624167446490596629187599197780150456563189254 diferential -15103315987476025490030998044611466241674464905966291875991977800850194107957 10068877324984016993353998696407644161116309937310861250661318534066796738638055 90060513851245929773888543895646150552206994439280481186470682443627481386729 3859736307910539847452366166956263595094585475969163479420172104761941050035755 diferential -51463150772140531299364882226083514601261139679588846392268961396008070886372 6432893846517566412420610278260439325157642459948605799033620174551009060796556 15789830350543117557759679773911987434477849674419305143082522246800226796978 6842259818568684275029194568695194554940401525581698895335759640226302838531356 diferential 52632767835143725192532265913039958114926165581397683810275074155462801588335 5263276783514372519253226591303995811492616558139768381027507415546280158833557 94249374960606205577325220355908762205798017436456317520725132789842713079135 5654962497636372334639513221354525732347881046187379051243507967423214980190957 diferential -37699749984242482230930088142363504882319206974582527008290053115610563277226 7809233925307371319264089686632440297051835730449237737431511002590759821711158 55139090113007712106462373813660908501351221085273763991716744353344386666375 9925036220341388179163227286458963530243219795349277518509013983606559199755158 diferential 44111272090406169685169899050928726801080976868219011193373395482721205331176 4411127209040616968516989905092872680108097686821901119337339548272120533117659 81901721655662674811794111347608520188592423514467615295013408075954333986263 282419729847112671764807280508994897202042839705060742396597958930778564866759 diferential -79077524357191548094146038542518571216571995117417007871047428486646548337596 3671456488012464732942494646616933663626556916165789651155773465487161315674160 86844066927987146567678238756515930889628173209306178286953872356391146373278 8684406692798714656767823875651593088962817320930617828695387235664114737327860 diferential 250001000000 25000100000061 68287642370724935762618786030764663605519589190223661558972275699103044217199 6234958651240102830499976115852425807460484230411725620601816476902519080723361 diferential -5938055858323907457619024872240405530914746886106405352954110930077853409966 10985403337899228796595196013644750232192281739296849902965105221144030808437162 18282961458523609803721734475055985450448036465117090165674499443663420501764 1218864097234907320248115631670399030029869097674472677711633296279404463364162 diferential -6094320486174536601240578158351995150149345488372363388558166480869375868123 10969776875114165882233040685033591270268821879070254099404699666064878562621463 59460802581324532785076992301758655383889560035200626574851299991863407526849 938854777599861043974899878448820874482466737397904630129231052553123066443363 diferential -50072254805325922345327993517270446639064892661221580273558989466332176862416 6571983443199027307824299149141746121377267161785332410904617367518598463192164 83627620004728363361467933617385711227049351979331875387437062269154811359827 1929868153955269923726183083478131797547292737984581739710086052414472275186264 diferential -64328938465175664124206102782604393251576424599486057990336201745010088607965 5146315077214053129936488222608351460126113967958884639226896139650807288637265 66166908135609254527754848576393090201621465302328516790060093224013263999650 4962518110170694089581613643229481765121609897674638759254506991836781350045965 diferential -16541727033902313631938712144098272550405366325582129197515023305645450499191 9925036220341388179163227286458963530243219795349277518509013983587271099514666 88546891769712384735671929712526047181581666801645515116109830637928623792758 8173559240281143206369716588848558201376769243228816779948599751225108605779766 diferential -6811299366900952671974763824040465167813974369357347316623833125677537734961 10898078987041524275159622118464744268502358990971755706598133001584062375937667 59650470213162888551536568034778619196916320992250708318311750709573022894083 5263276783514372519253226591303995811492616558139768381027507415584465068230567 diferential -7017702378019163359004302121738661081990155410853024508036676553728372211778 10877438685929703206456668288694924677084740886822187987456848658778978928255968 50659039041325835497812305941300959685616434372095270667389758874729852219429 5065903904132583549781230594130095968561643437209527066738975887504235346942968 diferential 312501250000 31250125000069 97115945811942615516543406781480180779799247459869274643475298119018490611412 8591025975671846757232685984515554453597625736834589679999737910564576659583169 diferential -11205686055224147944216546936324636243822990091523377843477919013372724015581 10458640318209204747935443807236327160901457418755152653912724412814543747875670 77194726158210796949047323339125271901891709519383269588403442094682141332925 67003500336770 diferential -77194726158210796949047323339125271901891709519383269588403442094012106329558 3859736307910539847452366166956263595094585475969163479420172104750605516477971 75863782603758886656822369488450698248410817975945627009293037920653313051497 1197849199006719263002458465607116288132802389093878321199363756705708739944971 diferential -63885290613691694026797784832379535367082794085006843797299400353596225652048 5190679862362450139677320017630837248575477019406806058530576278792193584228972 24812590550853470447908068216147408825608049488373193796272534959257499252394 9097949868646272497566291679254049902722951479070171058633262818333930724915872 diferential 66166908135609254527754848576393090201621465302328516790060093224081807996764 6616690813560925452775484857639309020162146530232851679006009322408180799676473 34308767181427020866243254817389009734174093119725897594845974264527640816878 2573157538607026564968244111304175730063056983979442319613448069885963033581673 diferential -8577191795356755216560813704347252433543523279931474398711493565668010481062 10721489744195944020701017130434065541929404099914342998389366957585015101327574 44535418937429305932142686541803041481860601645798040147155831977895485578630 3562833514994344474571414923344243318548848131663843211772466558277870546368174 diferential -8907083787485861186428537308360608296372120329159608029431166395116780114949 10688500544983033423714244770032729955646544394991529635317399674640138137938875 92633671389852956338856788006950326282270051423259923506084130513618569599510 9263367138985295633885678800695032628227005142325992350608413051401857119951075 diferential 400001600000 40000160000076 67545385388434447330416407921734612914155245829460360889853011832973136292572 2894802230932904885589274625217197696320939106976872609565129078621708412779376 diferential -38597363079105398474523661669562635950945854759691634794201721046756052164779 7719472615821079694904732333912527190189170951938326958840344209476210932955877 60413263949904101960123992178445864966697859623865167503967911204709519479698 3020663197495205098006199608922293248334892981193258375198395560300913126378477 diferential -30206631974952050980061996089222932483348929811932583751983955601700388215914 8558545726236414444350898891946497536948863446714232063062120753981777327842378 31579660701086235115519359547823974868955699348838610286165044493600453593956 2105310713405749007701290636521598324597046623255907352411002966300789527628978 diferential -10526553567028745038506453182607991622985233116279536762055014830592558317667 10526553567028745038506453182607991622985233116279536762055014831092560317667079 110278180226015424212924747627321817002702442170547527983433488706688773332750 8270863516951156815969356072049136275202683162791064598757511653061302250076579 diferential -27569545056503856053231186906830454250675610542636881995858372176075750831985 8822254418081233937033979810185745360216195373643802238674679096544241066235280 57896044618658097711785492504343953926418782139537452191302581571264131252219 5789604461865809771178549250434395392641878213953745219130258157176413325221980 diferential 500002000000 50000200000081 36565922917047219607443468950111970900896072930234180331348998887326841003528 2437728194469814640496231263340798060059738195348945355423266592558808926728281 diferential -12188640972349073202481156316703990300298690976744726777116332961738751736246 10360344826496712222108982869198391755253887330233017760548883017977940975809182 51463150772140531299364882226083514601261139679588846392268961396791461225317 3859736307910539847452366166956263595094585475969163479420172104828944550372482 diferential -12865787693035132824841220556520878650315284919897211598067240348502015721593 10292630154428106259872976445216702920252227935917769278453792279301614577274483 61301694302108574047772874416364186510325769324216125849614498134339086091179 4767909556830666870382334676828325617469782058550143121636683188298401062125783 diferential -13622598733801905343949527648080930335627948738714694633247666251355075469922 10216949050351429007962145736060697751720961554036020974935749689016308602441584 101318078082651670995624611882601919371232868744190541334779517749459704438858 10131807808265167099562461188260191937123286874419054133477951775008470693885884 diferential 625002500000 62500250000085 38597363079105398474523661669562635950945854759691634794201721047846121171513 134007000673485 diferential -38597363079105398474523661669562635950945854759691634794201721046506051164779 7719472615821079694904732333912527190189170951938326958840344209501211032955886 49625181101706940895816136432294817651216098976746387592545069918514998504788 6616690813560925452775484857639309020162146530232851679006009322516045300397986 diferential 16541727033902313631938712144098272550405366325582129197515023306645454499191 1654172703390231363193871214409827255040536632558212919751502330664545449919187 89070837874858611864285373083606082963721203291596080294311663955790971157260 7125667029988688949142829846688486637097696263327686423544933116555741092736287 diferential -17814167574971722372857074616721216592744240658319216058862332790233560229898 9797792166234447305071391039196669126009332362075568832374283035128460126443988 19298681539552699237261830834781317975472927379845817397100860524428111090807 5789604461865809771178549250434395392641878213953745219130258157243416825558688 diferential 38597363079105398474523661669562635950945854759691634794201721048006057164779 3859736307910539847452366166956263595094585475969163479420172104800605716477989 63159321402172470231038719095647949737911398697677220572330088987200907187912 4210621426811498015402581273043196649194093246511814704822005932601579055257889 diferential -21053107134057490077012906365215983245970466232559073524110029661185116635334 9473898210325870534655807864347192460686709804651583085849513348033304485900390 1010101010101 201010501010190 diferential 1000004000000 100000400000091 102926301544281062598729764452167029202522279359177692784537922793582922450634 7719472615821079694904732333912527190189170951938326958840344209657889100744891 diferential -25731575386070265649682441113041757300630569839794423196134480697004031443186 9006051385124592977388854389564615055220699443928048118647068244451413005115192 86844066927987146567678238756515930889628173209306178286953872357401247383379 8684406692798714656767823875651593088962817320930617828695387235865125238337992 diferential 1250005000000 125000500000093 99250362203413881791632272864589635302432197953492775185090139837029997009576 1654172703390231363193871214409827255040536632558212919751502330880274451362193 diferential -82708635169511568159693560720491362752026831627910645987575116528227252495955 3308345406780462726387742428819654510081073265116425839503004661329090899838294 38597363079105398474523661669562635950945854759691634794201721048856222181614 335017501683594 diferential -38597363079105398474523661669562635950945854759691634794201721045506047164779 7719472615821079694904732333912527190189170951938326958840344209601211432955895 2020202020202 402021002020295 diferential 2000008000000 200000800000096 57896044618658097711785492504343953926418782139537452191302581573284333272421 5789604461865809771178549250434395392641878213953745219130258157578434327242196 diferential 2500010000000 250001000000097 77194726158210796949047323339125271901891709519383269588403442097712444363228 670035003367097 diferential -77194726158210796949047323339125271901891709519383269588403442091012094329558 3859736307910539847452366166956263595094585475969163479420172105050606716477998 5050505050505 1005052505050598 diferential 5000020000000 500002000000099 10101010101010 2010105010101099 diferential 10000040000000 10000040000000",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "NotATether",
      "created_time": "July 10, 2023, 04:44:29 PM",
      "body": "Quote from: GR Sasa on July 10, 2023, 11:10:44 AM@digaran i didn't understand anything you wrote here, but could you please help me at least compile the ecctools that Alberto wrote? I will be greatfulI believe there is a makefile for the ecctools at the top level of the repository.Then again, it's been some time since I last checked it so it's possible that you compile the programs by running GCC directly. Each (?) of the programs are self-contained in a single file.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "GR Sasa",
      "created_time": "July 24, 2023, 11:14:07 AM",
      "body": "Does dividing a public key by a non division number really result in a random unknown point in the curve? Why is that though? For me, this makes no senseÂ  :",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "ertil",
      "created_time": "July 24, 2023, 12:32:30 PM",
      "body": "QuoteDoes dividing a public key by a non division number really result in a random unknown point in the curve?Yes, of course. For that reason, ECDSA is secure, and simple tricks like \"let's divide it\" won't work.QuoteWhy is that though?Because we are in finite field. And the beauty of finite fields is that they are, well, finite.QuoteFor me, this makes no senseIt makes perfect sense, if you know, how things are calculated.In real numbers, you have things like sqrt(8). In finite fields, you have for example 18.Code:18*18=324324=79*4+8324 modulo 79=8See? In finite fields, you can have \"18\" as a result of \"sqrt(8)\", and it is perfectly valid, because \"18*18\" gives you \"8\" in this field.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "digaran",
      "created_time": "July 24, 2023, 01:16:14 PM",
      "body": "Quote from: GR Sasa on July 24, 2023, 11:14:07 AMDoes dividing a public key by a non division number really result in a random unknown point in the curve? Why is that though? For me, this makes no senseÂ  :  The result is not random at all, did you even read my first post and other posts?Let me give you a solution in order to successfully divide an odd key by 2, I have tried 4, 5, 6 etc, I couldn't get any meaningful result, I'm still learning.Now the example, you could either add 1 or subtract 1 from your odd private (public key) key and then divide by 2 or you could simply divide the odd key by 2 add n/2 to the result, you will get the same result.If your key is divisible Â by 2, 4, 8 etc but the last digit is 1, you could reach key 0x3 by dividing by 2 adding n/2 and dividing the result again by 2 adding n/2 till you reach the lowest point.Demonstration :Private key :Code:0000000000000000000000000000000000000000000000000000000000008001Public key :Code:03a3dd9bdf806a8c86fa43fd7c8af5fe3949b9244d46cfdf42aa716e3168f8e67bDivided by 2, result:Code:024d2432b7f67a3b25fe7f6a52164f1bf0235d3f6ce00569f4fc954b823c7c7607Adding n/2 to above N/2 =Code:7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0Result, private key :Code:0000000000000000000000000000000000000000000000000000000000004001Result, public key :Code:03d7ec238cd058837f44315fb8db2134f01daea15c10320c9173e7d5f68ff2d9d0And if you keep dividing you will eventually reach 0x3, dividing 3 by 2 will give you 0x2 then 1, and dividing 1 by 2 will give you half, aka n/2 and take a look at 0.5 = n/2, it is a number around 2^255.Now to simplify it, imagine you have 23 as your odd key, dividing by 2 adding n/2 will give you 12, it's like adding 1 to 23 = 24/2 = 12. You have 2 options.Furthermore, there are ways to accurately divide your key by 2 without any division, but that rock is really big and I'm afraid the glass will shatter, you should start with small rocks, learn from Musk throwing a big rock at E-truck's window claiming it won't shatter. Lol",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "garlonicon",
      "created_time": "July 24, 2023, 02:48:20 PM",
      "body": "QuoteThe result is not random at all, did you even read my first post and other posts?Random in, random out. Unknown in, unknown out. Infinity in, infinity out. It is that simple. If you divide some public key, where you don't know the private key, the result is totally random from your perspective. It may be non-random for the key owner, but not for the attacker.QuoteI have tried 4, 5, 6 etc, I couldn't get any meaningful result, I'm still learning.Just use inversion:Code:Â  Â n=fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141Â n/2=7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1-n/2=7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0Â n/4=bfffffffffffffffffffffffffffffff0c0325ad0376782ccfddc6e99c28b0f1Â n/5=66666666666666666666666666666665e445f1f5dfb6a67e4cba8c385348e6e7Â n/6=d5555555555555555555555555555554463c62c03cbc85871fd9f975582d3661By the way, last time you messed up 1/2 with -1/2. This is a common mistake, been there, done that. If you learn more about inversion, you will know why. And if you want a proof, then halve a point using your method, and then double it. If you reach points, where 02 and 03 prefixes are inverted, you will understand, why you need inversion, instead of relying just on standard division, provided by any BigInteger implementation.QuoteFurthermore, there are ways to accurately divide your key by 2 without any division, but that rock is really big and I'm afraid the glass will shatterThis problem is called \"discrete logarithm\", that's why you have DL letters in ECDLP. You can always divide a number by two, and finally reach the base point. The problem is: if you try to halve some point in a loop, you will visit a significant portion of the elliptic curve, I guess something above 2^250, maybe n/6 or something like that. So, don't run brute force on that, because you will never reach that answer in any reasonable time.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    }
  ]
}