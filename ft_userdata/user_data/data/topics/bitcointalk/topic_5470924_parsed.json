{
  "id": "topic_5470924",
  "title": "achow101",
  "author": "achow101",
  "created_time": "October 19, 2023, 03:13:50 PM",
  "content": "25.1 Release NotesBitcoin Core version 25.1 is now available from:https://bitcoincore.org/bin/bitcoin-core-25.1/This release includes various bug fixes and performanceimprovements, as well as updated translations.Please report bugs using the issue tracker at GitHub:https://github.com/bitcoin/bitcoin/issuesTo receive security and update notifications, please subscribe to:https://bitcoincore.org/en/list/announcements/join/How to UpgradeIf you are running an older version, shut it down. Wait until it has completelyshut down (which might take a few minutes in some cases), then run theinstaller (on Windows) or just copy over /Applications/Bitcoin-Qt (on macOS)or bitcoind/bitcoin-qt (on Linux).Upgrading directly from a version of Bitcoin Core that has reached its EOL ispossible, but it might take some time if the data directory needs to be migrated. Oldwallet versions of Bitcoin Core are generally supported.CompatibilityBitcoin Core is supported and extensively tested on operating systemsusing the Linux kernel, macOS 10.15+, and Windows 7 and newer.  BitcoinCore should also work on most other Unix-like systems but is not asfrequently tested on them.  It is not recommended to use Bitcoin Core onunsupported systems.Notable changesP2P#27626 Parallel compact block downloads, take 3#27743 p2p: Unconditionally return when compact block status == READ_STATUS_FAILEDFees#27622 Fee estimation: avoid serving stale fee estimateRPC#27727 rpc: Fix invalid bech32 address handlingRest#27853 rest: fix crash error when calling /deploymentinfo#28551 http: bugfix: allow server shutdown in case of remote client disconnectionWallet#28038 wallet: address book migration bug fixes#28067 descriptors: do not return top-level only funcs as sub descriptors#28125 wallet: bugfix, disallow migration of invalid scripts#28542 wallet: Check for uninitialized last processed and conflicting heights in MarkConflictedBuild#27724 build: disable boost multi index safe mode in debug mode#28097 depends: xcb-proto 1.15.2#28543 build, macos: Fix qt package build with new Xcode 15 linker#28571 depends: fix unusable memory_resource in macos qt buildGuigui#751 macOS, do not process actions during shutdownMiscellaneous#28452 Do not use std::vector = {} to release memoryCI#27777 ci: Prune dangling images on RESTART_CI_DOCKER_BEFORE_RUN#27834 ci: Nuke Android APK task, Use credits for tsan#27844 ci: Use podman stop over podman kill#27886 ci: Switch to amd64 container in \"ARM\" taskCreditsThanks to everyone who directly contributed to this release:Abubakar Sadiq IsmailAndrew ChowBruno GarciaGregory SandersHennadii StepanovMacroFakeMatias FurszyferMichael FordPieter Wuillestickies-vWill ClarkAs well as to everyone that helped with translations onTransifex.",
  "score": 0,
  "upvotes": 0,
  "downvotes": 0,
  "url": "https://bitcointalk.org/index.php?topic=5470924",
  "comments": [
    {
      "author": "NotATether",
      "created_time": "November 21, 2023, 07:31:20 AM",
      "body": "Quick question about the macOS build.Over time, it seems that the more recent builds of Bitcoin Core require a newer and newer version of macOS to run. Is this because you guys are building against a newer XCode, or has it stayed the same all these years?By comparison, the Windows and Linux builds have an excellent lifecycle.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "takuma sato",
      "created_time": "November 28, 2023, 04:42:16 AM",
      "body": "Quote from: NotATether on November 21, 2023, 07:31:20 AMQuick question about the macOS build.Over time, it seems that the more recent builds of Bitcoin Core require a newer and newer version of macOS to run. Is this because you guys are building against a newer XCode, or has it stayed the same all these years?By comparison, the Windows and Linux builds have an excellent lifecycle.Im not familiar with macOS at all or anything Apple for that matter but it probably has to do with lack of backward compatibility with some libraries or something. Considering how the whole Apple stock depends on short lived newer models being bought and replaced. This guy here said on stackexchange:QuoteThe Windows code-base is all about backwards compatibility, some apps from Windows 1.0 continue to work just fine, as you can even run 16-bit apps in Windows 10 if you need to. macOS has a different philosophy, Apple burns the underbrush and cleans house on certain compatibility stubs on a regular basis. A Mac app from 2012 probably won't run today unless recompiled 64-bit, yet a Windows app from 1992 might run just fine.Wouldn't recommend running anything Bitcoin outside of Linux anyway.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "Mary Roberts",
      "created_time": "November 30, 2023, 09:17:42 AM",
      "body": "Why does each new version of Bitcoin Core require a newer version of macOS? Could it be due to XCode updates or other development factors?",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "bishopcrypto",
      "created_time": "November 30, 2023, 03:01:32 PM",
      "body": "Quote from: Mary Roberts on November 30, 2023, 09:17:42 AMWhy does each new version of Bitcoin Core require a newer version of macOS? Could it be due to XCode updates or other development factors?Because Apple's gonna Apple.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    }
  ]
}