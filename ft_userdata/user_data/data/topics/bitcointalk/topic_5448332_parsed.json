{
  "id": "topic_5448332",
  "title": "Unplugged Taste",
  "author": "Unplugged Taste",
  "created_time": "April 11, 2023, 04:29:43 AM",
  "content": "Hi everyone! I hope you are all doing great. I am not a programmer. Just started running ready made python scripts given by Chat GPT. But now I realized robots cannot replace humans whatsoever Tech advancements may happen. Here is my situation. I am private keys lost case. AND I just don't want to handover matters into other's hands for obvious reasons. My case is super identical. I created a bitcoin puzzle myself with my own BTCs and in the process I lost my own private keys, very funny hah! BUT its true. First of all I generated a random private key from within a range, like that of BITCOIN Puzzle range. I generated its public key and I than started adding 1 million in the private key and generated its public key. Again I added 1 million in the private key and generated its public key. I continued this for 1k times. So basically from first private key and last private there is 1 billion private keys. In case you didn't get my point:Suppose I randomly chosen private key as 980I added 1 million in private key = 1,000,980 Again added 1 million = 2,000,980,.........Up till I added 1 billion in my first private key. From start to end of private keys, I generated all public keys! YES, I still have 1 billion public keys of those 1 billion private keys. Ironically I lost all my private keys. Not a single public key is released since no transaction has ever happened. I placed 1 BTC in any one of those 1 billion private keys that I am looking for. I will be glad to share 0.1 BTC for genuine help specifically for python scripts would be great. Currently I am considering modifying Kangaroo algorithm to suit my needs, no luck so far. Looking forward",
  "score": 0,
  "upvotes": 0,
  "downvotes": 0,
  "url": "https://bitcointalk.org/index.php?topic=5448332",
  "comments": [
    {
      "author": "whanau",
      "created_time": "April 11, 2023, 05:32:15 AM",
      "body": "Quote from: Unplugged Taste on April 11, 2023, 04:29:43 AMI generated a random private key from within a range, Albertobsd's key hunt program may help.. It has a lot of options. He is also a member of the forumhttps://github.com/albertobsd/keyhuntIf you can remember the range, then start at the beginning and regenerate with the BSGS or kangaroo options until you hit the first public key.DON'T publish the range or you will have lots of unknown helpers!How did you lose the original key was a file deleted? perhaps try recovering that.Good luck.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "NotATether",
      "created_time": "April 11, 2023, 06:25:38 AM",
      "body": "Considering that you have all of the public keys, you need to look for the one that has the 1BTC in a block explorer by hashing them into an address first.Were they legacy addresses, or a form of segwit address?After you have the 1k addresses, you should be able to look them up in any block explorer and see which one has the incoming transaction.If the public keys were in a file, and they are in order of creation, you have some luck, because it will be possible to deduce the exact addition you added to it.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "pooya87",
      "created_time": "April 11, 2023, 06:32:07 AM",
      "body": "Quote from: Unplugged Taste on April 11, 2023, 04:29:43 AMFirst of all I generated a random private key from within a range,The only way to find your key is to know that range. If the range is small then you have to check all the keys in that range because what you did (adding a million) is not going to change anything since the start was random.If the range is huge, there is no way to recover the key.If you don't know the range is huge, there is also no way to recover the key.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "Minase",
      "created_time": "April 11, 2023, 06:52:15 AMLast edit: April 11, 2023, 07:23:03 AM by Minase",
      "body": "here is a simple script that will help you find the key if you know the initial starting keyyou need to install or download ecpy in same folder.Code:from ecpy.curves     import Curve,Pointcv = Curve.get_curve('secp256k1')G  = Point(0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798,           0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8,           cv)startKey = 0x12345678startKeyPub = G * startKeylucky_pub = \"02A88049484BBD7DC717FF0414262F03074E784BBBF86DF052933104A2DFE6AD86\"for i in range(0, 1000):    startKeyPub = startKeyPub + G * (i * 1000000)    if startKeyPub == lucky_pub:        print(hex(startKey + (i * 1000000)))        break//edit if you know the range in which you generated the pubkey like between 2^80 and 2^81 you could use kangaroo with only the pubkey containing the money, no need to edit the program, it's quite fast.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "PawGo",
      "created_time": "April 11, 2023, 07:05:10 AM",
      "body": "How many sets must be checked? I guess you do not know the starting point, so the real difficulty is in the fact that we may need to take into account X initial keys.Processing a single set itself is trivial - I guess you know the public key/address you are looking for, at least it is not very difficult to generate addresses for each public key and see which one is founded.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "BitMaxz",
      "created_time": "April 11, 2023, 07:09:30 AM",
      "body": "I'm a bit confused about how you exactly generated your private keys.Do you mind telling us the tools, wallet or software did you use to generate these private keys?Is the Bitcoin puzzle you mean is likely the same as flipping a coin when generating a private key?If you don't know what is coin flipping to generate private keys then check this https://bitcointalk.org/index.php?topic=5187401.0More information can give us more idea on how can we solve your case.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "Unplugged Taste",
      "created_time": "April 11, 2023, 07:59:39 AM",
      "body": "I highly appreciate all of you answers and I'll try to answer your questions.With regard to checking the balance in the address of public key, I already have it. The reason I stressed on 1 billion public keys is the fact that they are in sequence of private keys like private key 503,504,505,506,507,..... I was only saving private key after 1 million. 1 billion Public keys that I have they are not 1 million apart they are the sequence of 1 billion private keys. I know the position of the one in which the BTC have but I am still keeping all 1 billion hoping that there might be some algorithm which can take this sequence of public keys and try to find 1 single private key within given range.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "Minase",
      "created_time": "April 11, 2023, 08:03:09 AM",
      "body": "how did you lose your private keys??? are you sure python didnt save the file with the private keys under your profile directory?",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "Unplugged Taste",
      "created_time": "April 11, 2023, 08:08:17 AM",
      "body": "In simplest form... Within given range start and end bit,,,, There are 1 billion private keys in sequence. and We have their 1 billion public keys. So the reason I am stressing on it is that because it like finding 1 billion private keys in given range instead of finding 1, don't you think it got to be easy? The range is similar to that of bitcoin puzzle but it is not straight forward zeros and fffs, it is more than 2^122 i guess!",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "Minase",
      "created_time": "April 11, 2023, 08:11:24 AM",
      "body": "sorry, still didn't get it.Do you know the public key of the address containing the money or thats what you want to find ?",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "pooya87",
      "created_time": "April 11, 2023, 08:12:49 AM",
      "body": "Quote from: Unplugged Taste on April 11, 2023, 07:59:39 AMI know the position of the one in which the BTC have but I am still keeping all 1 billion hoping that there might be some algorithm which can take this sequence of public keys and try to find 1 single private key within given range. The sequence of public keys is not going to be useful in solving the problem itself. The only advantage it could give you is to improve your luck, slightly. Meaning when you search for the key you can check each permutation against this list instead of just the funded key and when you find a private key corresponding to a pubkey from that list you stop there and then according to where in the list the key is located (assuming the pubkey list is sorted not randomly stored) you could compute the private key of the funded address.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "NotATether",
      "created_time": "April 11, 2023, 08:16:17 AM",
      "body": "Quote from: Unplugged Taste on April 11, 2023, 08:08:17 AMIn simplest form... Within given range start and end bit,,,, There are 1 billion private keys in sequence. and We have their 1 billion public keys. So the reason I am stressing on it is that because it like finding 1 billion private keys in given range instead of finding 1, don't you think it got to be easy? The range is similar to that of bitcoin puzzle but it is not straight forward zeros and fffs, it is more than 2^122 i guess!2^122 ranges are extremely hard to crack, even if you have the public keys and can use Kangaroo, because it took an insanely long time (and who knows how much hardware) to break puzzle #120 which has a similar range.What is the algorithm you used to create each subsequent private key from the first?",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "Unplugged Taste",
      "created_time": "April 11, 2023, 08:19:46 AM",
      "body": "Quote from: NotATether on April 11, 2023, 08:16:17 AMQuote from: Unplugged Taste on April 11, 2023, 08:08:17 AMIn simplest form... Within given range start and end bit,,,, There are 1 billion private keys in sequence. and We have their 1 billion public keys. So the reason I am stressing on it is that because it like finding 1 billion private keys in given range instead of finding 1, don't you think it got to be easy? The range is similar to that of bitcoin puzzle but it is not straight forward zeros and fffs, it is more than 2^122 i guess!2^122 ranges are extremely hard to crack, even if you have the public keys and can use Kangaroo, because it took an insanely long time (and who knows how much hardware) to break puzzle #120 which has a similar range.What is the algorithm you used to create each subsequent private key from the first?In puzzle#120 you are looking for 1 private key and in mine it is 1 billion.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "Minase",
      "created_time": "April 11, 2023, 08:30:49 AMLast edit: April 11, 2023, 09:05:27 AM by Minase",
      "body": "so thats what you want to find...you can use the following code to convert Public Key to Address and print it on the screenwhat you need to do is to replace the \"INSERT_YOUR_ADDRESS\" with your actual address, and put all the public keys into a file.replace 'your_file_with_pubkeys.txt' with your file namewhat this script does is take every public key from your file and convert it to address.at the end you will know the public key corresponding to the addressyou may also need to install base58 with pip install base58Code:import hashlibimport base58def sha256(arg) : byte_array = bytearray.fromhex(arg) m = hashlib.sha256() m.update(byte_array) return m.hexdigest()def ripemd160(arg):    h = hashlib.new('ripemd160')    h.update(bytearray.fromhex(arg))    return h.hexdigest()def final_hash(arg):    h256 = sha256(arg)    h160 = ripemd160(h256)    tmp = \"00\" + h160    checksum = sha256(sha256(tmp))[:8]    return tmp + checksumdef getAddress(arg):    h = final_hash(arg)    return base58.b58encode(bytes.fromhex(h)).decode('utf-8')targetAddress = \"INSERT_YOUR_ADDRESS\"file = open('your_file_with_pubkeys.txt', 'r')for line in file:    pk = line.strip()    if getAddress(pk) == targetAddress:         print(\"The Public Key for address \" + targetAddress + \" is : \" + pk ) file.close()// editafter you find the public key matching the address with funds you will only need to search for private key for that single public keyPS: it may take a 2-3 hours to convert those 1billion public keys to address",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "pooya87",
      "created_time": "April 11, 2023, 08:58:13 AM",
      "body": "Quote from: Unplugged Taste on April 11, 2023, 08:19:46 AMIn puzzle#120 you are looking for 1 private key and in mine it is 1 billion. 1 billion keys may look big when you look at it alone but when it is in comparison in a range such as the 2122 key range, it is more like a drop in the ocean.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "GR Sasa",
      "created_time": "April 11, 2023, 10:56:43 AM",
      "body": "2,5 years ago back in 2020, I also had about 0.22BTC placed in a 80 bits range, which i put for testing purposes, but at the end i have lost its public key and after that obviously lost its coins.No way to recover it anymore if your situation like me. Because all i know now is the address, and where the private key approximately located. But other than that gg bye bye coins. 80 bits is still big range. My pc can scan only 40 bits. So can you imagine scanning 80 bits?I was too dumb.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "Cricktor",
      "created_time": "April 11, 2023, 12:45:29 PM",
      "body": "Quote from: Unplugged Taste on April 11, 2023, 04:29:43 AMFirst of all I generated a random private key from within a range, like that of BITCOIN Puzzle range. I generated its public key and I than started adding 1 million in the private key and generated its public key. Again I added 1 million in the private key and generated its public key. I continued this for 1k times. So basically from first private key and last private there is 1 billion private keys. In case you didn't get my point:Suppose I randomly chosen private key as 980I added 1 million in private key = 1,000,980 Again added 1 million = 2,000,980,.........Up till I added 1 billion in my first private key. From start to end of private keys, I generated all public keys! YES, I still have 1 billion public keys of those 1 billion private keys. Ironically I lost all my private keys. Not a single public key is released since no transaction has ever happened.What was the purpose to iterate 1k times to add 1m to the initial and then intermediate random key of this iteration? To me it makes no sense when you used also all intermediate private keys anyway (or I can't follow your procedure).If I understand you correctly you have a starting private key from some range and you stepped over a consecutive range of 1 billion (1k times 1m) private keys. All private keys are only one unit apart from each other.Then you generated from all those 1 billion private keys the respective public keys. It's a fair assumption that you only initially stored the starting private key and not all the intermediate ones. You did that by some script or program and kept only the output of the public keys. You had no or poor backup and somehow lost your program or script and with it your initial private key. Well, shit happens. Out of curiosity, when did you do that and how much was 1 BTC worth at that time?Quote from: Unplugged Taste on April 11, 2023, 04:29:43 AMI placed 1 BTC in any one of those 1 billion private keys that I am looking for.Just to be clear: there's 1 BTC controlled by a single private key from your range of 1 billion consecutive private keys located somewhere in the private key space of Bitcoin?Still, your 1k steps don't make any sense to me in the context of your other details. Feel free to correct me where I'm wrong.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "Skybuck",
      "created_time": "April 12, 2023, 12:47:48 AM",
      "body": "1. Adding numbers to private keys ? Is that even possible/safe ? How would that generate a public key ? Hmm RSA, eclipctive curve ? hmmm..2. 1 BTC each in one of these billion addresses ? Euh are you aware bitcoin only has 21 million coins ?! LOL.This smells and sounds fishy to me ! =D",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "Unplugged Taste",
      "created_time": "April 12, 2023, 03:17:36 AM",
      "body": "Quote from: Skybuck on April 12, 2023, 12:47:48 AM1. Adding numbers to private keys ? Is that even possible/safe ? How would that generate a public key ? Hmm RSA, eclipctive curve ? hmmm..2. 1 BTC each in one of these billion addresses ? Euh are you aware bitcoin only has 21 million coins ?! LOL.This smells and sounds fishy to me ! =DPerhaps you misunderstood what I said. There is only 1 BTC in only 1 address. That 1 address that I already know & its public key has 1 billion public keys around it. you can turn any number to become your private key or any sequence of number some people are asking whether it is possible or not!",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    }
  ]
}