{
  "id": "topic_5398458",
  "title": "echogomodrill",
  "author": "echogomodrill",
  "created_time": "May 13, 2022, 09:19:22 AM",
  "content": "давно крутиться  идея фонда и заработка на коллективном интеллектесобираемся все умные вместе, скидываемся по X баксиков или эфирчиков, дружно ищем прибыльные проекты, покупаем там перспективные монетки, потом на пике их продаем за эфирчики и выводим в наш криптофондделим между собой по такой схеме, прмиерный код Code:package mainimport ( \"fmt\" \"math\" \"math/rand\" \"time\")func process_fat_accounts(accounts []float64, base float64) float64 { ExcessSum := 0.0 for i, money := range accounts {  if money > base {   f := math.Pow(money/base, 1.3)   if money-f > base {    accounts[i] -= f    ExcessSum += f   }  } } return ExcessSum}func small_amount_limit(x float64) float64 { if x > 10 {  x = 10 } return x}func process_poor_accounts(accounts []float64, base float64, ExcessSum float64) float64 { all_factors := 0.0 for _, money := range accounts {  if money < base {   all_factors += small_amount_limit(base / money)  } } amount_to_add := ExcessSum / all_factors //fmt.Print(\"amount_to_add :\", amount_to_add) all_money := 0.0 //for i, money := range accounts { for i := 0; i < len(accounts); i++ {  money := accounts[i]  if money < base {   f := small_amount_limit(base/money) * amount_to_add   accounts[i] += f   all_money += f  } } //fmt.Printf(\"all_money : %f \\n\", all_money) return all_money}func arr_sum(accounts []float64) float64 { base := 0.0 for _, item := range accounts {  base += item } return base}func main() { accounts := make([]float64, 100000) rand.Seed(time.Now().UTC().UnixNano()) for i := 0; i < len(accounts); i++ {  accounts[i] = rand.Float64() * 700 } fmt.Println(\"after random init\", accounts[5]) accounts[5] = 2000 base := arr_sum(accounts) / float64(len(accounts)) //multFactor := 2 fmt.Println(\"base :\", base) //один цикл в 8 часов, 3 цикла в день, 100 циклов в один месяц prev := accounts[5] for i := 1; i <= 10; i++ {  benefits := process_fat_accounts(accounts, base)  process_poor_accounts(accounts, base, benefits)  fmt.Printf(\"%d| баланс на 5ом счету %.2f diff %.2f \\n\", i, accounts[5], (accounts[5] - prev))  prev = accounts[5] }}",
  "score": 0,
  "upvotes": 0,
  "downvotes": 0,
  "url": "https://bitcointalk.org/index.php?topic=5398458",
  "comments": [
    {
      "author": "~DefaultTrust",
      "created_time": "May 13, 2022, 12:50:38 PM",
      "body": "А зачем ваш фонд нужен умному человеку, который умеет искать прибыльные проекты и знает моменты когда пора сливаться?",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "imhoneer",
      "created_time": "May 13, 2022, 05:10:27 PM",
      "body": "Quote from: ~DefaultTrust on May 13, 2022, 12:50:38 PMА зачем ваш фонд нужен умному человеку, который умеет искать прибыльные проекты и знает моменты когда пора сливаться?Я так понимаю, тут идея как с майнинг пулами. Можно редко, да метко, а можно постоянно, но мало.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "echogomodrill",
      "created_time": "May 14, 2022, 06:35:20 AMLast edit: June 21, 2022, 06:21:22 PM by Xal0lex",
      "body": "можно майнить крипту/грины одному, но коэф (профит)/(потраченное время) будет хуже чем, такой же коэф, если будет учавствовать намного больше людей, но зависит от стоимости твоего времени и кол-ва умных людей в системенюанс, можно одному тянуть лямку и копаться в каждой крипте, тогда время на копание однотипных БЧ будет ускоряться, но если они разнотиные, придется изучать месяцы или годы на их перспективность, если каждый член системы будет отдельно специализироваться  на однотипных, то можно ускорить профит в несколько разтак работают финансовые фонды на западе, каждый аналитик отвечает за свою маленькую область, поэтому у них очень эффективно получается пылесосить новичков,  все ценовые волны в крипте - это игра этих криптофондов",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    }
  ]
}