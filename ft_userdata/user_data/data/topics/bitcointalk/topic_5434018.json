{
  "id": "topic_5434018",
  "title": "krashfire",
  "author": "krashfire",
  "created_time": "January 11, 2023, 04:02:25 AMLast edit: January 11, 2023, 03:38:30 PM by krashfire",
  "content": "Just putting it out here for those of you who, like me are very new in ECDSA Secp256k1 and wondering how to calculate the signatures or need hte formulas.The M here means the same as Z signature in bitcoin transaction ..so input your Z in the M boxes. Most importantly, the formulas are given there as well.why does different people call it Z, M or sometimes even call it H(m). i have no idea. confusing for me too earlier on but i caught up.Â  https://rawcdn.githack.com/nlitsme/bitcoinexplainer/aa50e86e8c72c04a7986f5f7c43bc2f98df94107/ecdsacrack.htmlFor those of you who needs to decompress your public key and get the XY Coordinates,https://github.com/RoyNahar/bitcoin-public-key-decompress-tool",
  "score": 0,
  "upvotes": 0,
  "downvotes": 0,
  "url": "https://bitcointalk.org/index.php?topic=5434018",
  "comments": [
    {
      "author": "stanner.austin",
      "created_time": "January 11, 2023, 08:36:33 AM",
      "body": "HelloIn developers coding termsM = messageH = Hashed message or hashZ = bitcoin specific for double SHA2K = nonce to randomize your sign output.X = bitcoin specific for private key",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    },
    {
      "author": "pooya87",
      "created_time": "January 11, 2023, 12:31:50 PM",
      "body": "The standard and the algorithm is the same everywhere but since there are different sources that have \"written\" that standard, they chose different terminologies. For example the \"Standards for Efficient Cryptography\" they use the term \"e\" in ECDSA formula for the integer derived from the message hash while in \"Handbook of Applied Cryptography\" it uses \"h(m)\" and wikipedia uses the term \"z\" for that integer.",
      "score": 0,
      "upvotes": 0,
      "downvotes": 0
    }
  ]
}